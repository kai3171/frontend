{"version":3,"sources":["webpack:///./node_modules/core-js/library/modules/core.get-iterator-method.js","webpack:///src/views/result/Table.vue","webpack:///./src/views/result/Table.vue?fc29","webpack:///./src/views/result/Table.vue","webpack:///src/views/result/Plot.vue","webpack:///./src/views/result/Plot.vue?922d","webpack:///./src/views/result/Plot.vue","webpack:///src/views/result/ScatterPlot.vue","webpack:///./src/views/result/ScatterPlot.vue?ccfd","webpack:///./src/views/result/ScatterPlot.vue","webpack:///src/views/result/Result.vue","webpack:///./src/views/result/Result.vue?af8d","webpack:///./src/views/result/Result.vue","webpack:///./node_modules/babel-runtime/core-js/get-iterator.js","webpack:///./node_modules/echarts-stat/dist/ecStat.js","webpack:///./node_modules/core-js/library/modules/_classof.js","webpack:///./node_modules/core-js/library/fn/object/values.js","webpack:///./node_modules/core-js/library/modules/es7.object.values.js","webpack:///./node_modules/core-js/library/fn/get-iterator.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator.js","webpack:///./node_modules/babel-runtime/core-js/object/values.js","webpack:///./node_modules/core-js/library/modules/_object-to-array.js","webpack:///./node_modules/echarts-stat/index.js"],"names":["classof","__webpack_require__","ITERATOR","Iterators","module","exports","getIteratorMethod","it","undefined","Table","data","agePerPage","ageCurrentPage","samplePerPage","sampleCurrentPage","errorData","sampleData","ageData","showBar","sortBy","sortDesc","fields","key","sortable","class","fieldsSample","predAgeOption","computed","sampleTableRows","this","length","ageTableRows","errorTableRows","methods","drawBar","item","xlable","keys_default","values_default","splice","title","text","left","xAxis","type","axisLabel","rotate","yAxis","series","mounted","JSON","parse","sessionStorage","console","log","result_Table","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","tag","responsive","id","items","per-page","current-page","head-variant","sort-by","sort-desc","sort-icon-left","on","update:sortBy","$event","update:sort-by","update:sortDesc","update:sort-desc","_v","total-rows","align","aria-controls","model","value","callback","$$v","expression","row-dblclicked","directives","name","rawName","staticStyle","height","autoresize","option","staticRenderFns","views_result_Table","normalizeComponent","ssrContext","Plot","optionAge","optionGender","tooltip","trigger","legend","orient","radius","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","optionDisease","optionTissue","optionRace","showDisease","showTissue","showRace","drawChart","genderNum","ageNum","diseaseNum","tissueNum","raceNum","genderData","diseaseData","tissueData","raceData","num","push","_item","_num","_item2","_num2","_item3","_num3","right","top","bottom","interval","changeModel","result_Plot","width","max-width","cols","header","views_result_Plot","Plot_normalizeComponent","ScatterPlot","clocks","chartData","matric","draw","echarts","echarts_stat","regression","predAge","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","get_iterator_default","next","done","clock","axisData","i","newArr","Age","dataset","source","transform","axisPointer","splitLine","lineStyle","symbolSize","datasetIndex","symbol","label","show","fontSize","labelLayout","dx","encode","err","return","split","result_ScatterPlot","_l","index","Result","gender","selectGender","datasetIDs","components","ScatterPlot_normalizeComponent","processData","$store","state","clockList","setItem","stringify_default","datasts","datasets","age","sample","sampleID","Age_unit","Gender","Race","Tissue","Disease","Condition","Platform","pred","predAgeKeys","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","allGender","Male","select","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","Female","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","created","result_Result","margin","margin-top","active-nav-item-class","active-tab-class","content-class","active","Result_Component","Result_normalizeComponent","__webpack_exports__","default","__esModule","factory","modules","installedModules","moduleId","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_RESULT__","require","clustering","statistics","histogram","dataProcess","dataPreprocess","normalizeDimensions","arrayUtil","numberUtil","arraySize","size","sumOfColumn","arraySum","sum","zeros","isNumber","mathPow","Math","pow","OutputType","SINGLE","MULTIPLE","kMeans","k","dataMeta","minDist","minIndex","distIJ","ptsInClust","clusterAssigned","centroids","extents","j","extentItem","min","span","random","createRandCent","calcExtents","dimensions","clusterChanged","Infinity","distEuclid","meanInColumns","dataList","mean","meanArray","dimIdx","setCentroidToResultData","result","outputCentroidDimensions","outputType","outputSingleData","line","centroid","outputClusterIndexDimension","dimLen","dataItem","powerSum","rawExtents","dist","dataSet","max","val","hierarchicalKMeans","clusterCountOrConfig","stepByStep","config","clusterCount","setClusterIndex","getClusterIndex","Error","colCount","defaultDimensions","parseDataMeta","isOutputTypeSingle","clusterAssment","dataIndex","clusterIndex","slice","setDistance","lowestSSE","ptsNotClust","clusterInfo","sseSplit","sseNotSplit","centroid0","centList","isEnd","oneStep","centSplit","newCentroid","newClusterAss","pointInClust","pointsInCluster","array","isArray","opt","numberDimensionMap","targetOneDim","toOneDimensionArray","predata","isCorrect","hasOwnProperty","getPrecision","str","toString","dotIndex","indexOf","objToString","Object","prototype","nativeMap","Array","map","ascending","a","b","NaN","s","n","zeroArray","vector","bisect","start","end","mid","floor","compare","obj","cb","context","len","isNaN","isInteger","isFinite","round","quantityExponent","exp","LN10","regreMethods","linear","xDimIdx","yDimIdx","sumX","sumY","sumXY","sumXX","rawItem","gradient","intercept","resultItem","points","parameter","linearThroughOrigin","exponential","sumXXY","sumYlny","sumXYlny","denominator","coefficient","E","logarithmic","sumlnx","sumYlnx","sumlnxlnx","polynomial","order","coeMatrix","lhs","sumA","temp","sumB","coeArray","matrix","number","maxColumn","abs","gaussianElimination","regreMethod","optOrOrder","sort","itemA","itemB","deviation","median","quantile","sampleVariance","maxData","variance","squaredDeviation","sqrt","temple","meanValue","sumData","h","minData","range","tickStep","thresholdMethod","squareRoot","bins","ceil","scott","freedmanDiaconis","sturges","LN2","optOrMethod","method","threshold","values","maxValue","minValue","binsNumber","tickStepResult","step","toFixedPrecision","rangeArray","toFixed","x0","x1","bin","customData","precision","arguments","stop","count","step0","step1","error","transformHelper","params","upstream","cloneRawData","normalizeExistingDimensions","formulaOn","cloneAllDimensionInfo","objectUtil","transformParams","dimensionsConfig","dimInfo","validateDimensionExists","getDimensionInfo","dimConfig","normalizeNewDimensions","names","indices","parseDimensionNewItem","isObject","extend","target","assign","sourceDimAll","resultDimsDef","sourceDimItem","cof","TAG","ARG","O","T","B","e","tryGet","callee","$export","$values","S","anObject","get","getIterator","iterFn","TypeError","DESCRIPTORS","getKeys","toIObject","isEnum","f","isEntries","keys"],"mappings":"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","file":"static/js/2.5756395598b822e610fa.js","sourcesContent":["var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/core.get-iterator-method.js\n// module id = 3fs2\n// module chunks = 1 2","<template>\n  <div>\n    <b-card title=\"Sample Information\" tag=\"article\" class=\"mb-2\">\n      <b-table responsive id=\"sampleTable\" :items=\"sampleData\" :per-page=\"samplePerPage\"\n        :current-page=\"sampleCurrentPage\" head-variant=\"light\"\n        :fields=\"fieldsSample\" :sort-by.sync=\"sortBy\" :sort-desc.sync=\"sortDesc\" sort-icon-left>\n      </b-table>\n      <b-pagination v-model=\"sampleCurrentPage\" :total-rows=\"sampleTableRows\" :per-page=\"samplePerPage\"\n        align=\"right\" aria-controls=\"sampleTable\">\n      </b-pagination>\n    </b-card>\n    <b-card title=\"Predicted Age (Double-click on the table to see a bar chart of predicted ages)\" tag=\"article\" class=\"mb-2\">\n      <b-table responsive id=\"ageTable\" :items=\"ageData\" :per-page=\"agePerPage\"\n        :current-page=\"ageCurrentPage\" head-variant=\"light\"  @row-dblclicked=\"drawBar\"\n        :fields=\"fields\" :sort-by.sync=\"sortBy\" :sort-desc.sync=\"sortDesc\" sort-icon-left>\n      </b-table>\n      <b-pagination v-model=\"ageCurrentPage\" :total-rows=\"ageTableRows\" :per-page=\"agePerPage\"\n        align=\"right\" aria-controls=\"ageTable\">\n      </b-pagination>\n    </b-card>\n    <b-card title=\"Predicted Age\" tag=\"article\" class=\"mb-2\" v-show=\"showBar\">\n      <v-chart autoresize :option=\"predAgeOption\" style=\"height: 300px\"></v-chart>\n    </b-card>\n    <!-- <b-card title=\"Predicted Age Metric\" tag=\"article\" class=\"mb-2\">\n      <b-table responsive :items=\"errorData\" head-variant=\"light\"></b-table>\n    </b-card> -->\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      agePerPage: 5,\n      ageCurrentPage: 1,\n      samplePerPage: 5,\n      sampleCurrentPage: 1,\n      // sampleData: [],\n      errorData: [],\n      sampleData: [\n      // {\n      //   'sampleID': 'GSM1051526',\n      //   'Age': 67,\n      //   'Age_unit': 'Year',\n      //   'Gender': 'f',\n      //   'Race': 'Yellow',\n      //   'Tissue': 'PBL',\n      //   'Country': 'United Kingdom',\n      //   'Disease': 'rheumatoid arthritis',\n      //   'Condition': '',\n      //   'Platform': '450K',\n      //   'Supplementary_Instructions': 'smoking status: current'\n      // },\n      // {\n      //   'sampleID': 'GSM1051527',\n      //   'Age': 53,\n      //   'Age_unit': 'Year',\n      //   'Gender': 'f',\n      //   'Race': 'Yellow',\n      //   'Tissue': 'PBL',\n      //   'Country': 'United Kingdom',\n      //   'Disease': 'rheumatoid arthritis',\n      //   'Condition': '',\n      //   'Platform': '450K',\n      //   'Supplementary_Instructions': 'smoking status: current'\n      // },\n      // {\n      //   'sampleID': 'GSM1051528',\n      //   'Age': 23,\n      //   'Age_unit': 'Year',\n      //   'Gender': 'f',\n      //   'Race': 'Yellow',\n      //   'Tissue': 'PBL',\n      //   'Country': 'United Kingdom',\n      //   'Disease': 'rheumatoid arthritis',\n      //   'Condition': '',\n      //   'Platform': '450K',\n      //   'Supplementary_Instructions': 'smoking status: current'\n      // },\n      // {\n      //   'sampleID': 'GSM1051529',\n      //   'Age': 12,\n      //   'Age_unit': 'Year',\n      //   'Gender': 'f',\n      //   'Race': 'Yellow',\n      //   'Tissue': 'PBL',\n      //   'Country': 'United Kingdom',\n      //   'Disease': 'rheumatoid arthritis',\n      //   'Condition': '',\n      //   'Platform': '450K',\n      //   'Supplementary_Instructions': 'smoking status: current'\n      // },\n      ],\n      ageData: [],\n      showBar: false,\n      sortBy: 'sampleID',\n      sortDesc: false,\n      // clock_list_dist = {'Horvath Clock': 'HorvathAge', 'OriginalMethod': 'PerSEClock',\n      //                 'Skin&Blood Clock': 'Skin&BloodClock', 'Zhang Clock': 'ZhangBlupredAge',\n      //                 'Hannum Clock': 'HannumAge', 'Weidner Clock': 'WeidnerAge', 'Lin Clock': 'LinAge',\n      //                 'FeSTwo': 'FeSTwo', 'MEAT': 'MEAT', 'AltumAge': 'AltumAge', 'PhenoAge': 'PhenoAge', 'BNN': 'BNN',\n      //                 'EPM': 'EPM', 'Cortical Clock': 'CorticalClock', 'VidalBralo Clock': 'VidalBraloAge',\n      //                 'PedBE': 'PedBE'}\n      fields: [\n        { key: 'sampleID', sortable: true },\n        { key: 'Age', sortable: true, class: 'text-center' },\n        { key: 'HorvathAge', sortable: false },\n        { key: 'Skin&BloodClock', sortable: false },\n        { key: 'ZhangBlupredAge', sortable: false },\n        { key: 'HannumAge', sortable: false },\n        { key: 'WeidnerAge', sortable: false },\n        { key: 'LinAge', sortable: false },\n        { key: 'PedBE', sortable: false },\n        { key: 'FeSTwo', sortable: false },\n        { key: 'MEAT', sortable: false },\n        { key: 'AltumAge', sortable: false },\n        { key: 'PhenoAge', sortable: false },\n        { key: 'BNN', sortable: false },\n        { key: 'EPM', sortable: false },\n        { key: 'CorticalClock', sortable: false },\n        { key: 'VidalBraloAge', sortable: false }\n      ],\n      fieldsSample: [\n        { key: 'sampleID', sortable: true },\n        { key: 'Age', sortable: true, class: 'text-center' },\n        { key: 'Age_unit', sortable: false },\n        { key: 'Gender', sortable: false },\n        { key: 'Race', sortable: false },\n        { key: 'Tissue', sortable: false },\n        { key: 'Disease', sortable: false },\n        { key: 'Condition', sortable: false },\n        { key: 'Platform', sortable: false }\n      ],\n      predAgeOption: {}\n    }\n  },\n  computed: {\n    sampleTableRows () {\n      return this.sampleData.length\n    },\n    ageTableRows () {\n      return this.ageData.length\n    },\n    errorTableRows () {\n      return this.errorData.length\n    }\n  },\n  methods: {\n    drawBar (item) {\n      let xlable = Object.keys(item)\n      let data = Object.values(item)\n      xlable.splice(0, 2)\n      data.splice(0, 2)\n      this.predAgeOption = {\n        title: {\n          text: item['sampleID'],\n          left: 'center'\n        },\n        xAxis: {\n          type: 'category',\n          axisLabel: {\n            rotate: 45\n          },\n          data: xlable\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [\n          {\n            data: data,\n            type: 'bar'\n          }\n        ]\n      }\n      this.showBar = true\n    }\n  },\n  mounted () {\n    // this.sampleData = JSON.parse(sessionStorage['data'])\n    this.sampleData = JSON.parse(sessionStorage['sampleData'])\n    console.log(JSON.parse(sessionStorage['sampleData']))\n    console.log(JSON.parse(sessionStorage['predAgeData']))\n    this.ageData = JSON.parse(sessionStorage['predAgeData'])\n  }\n}\n\n</script>\n<style scoped>\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/result/Table.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-card',{staticClass:\"mb-2\",attrs:{\"title\":\"Sample Information\",\"tag\":\"article\"}},[_c('b-table',{attrs:{\"responsive\":\"\",\"id\":\"sampleTable\",\"items\":_vm.sampleData,\"per-page\":_vm.samplePerPage,\"current-page\":_vm.sampleCurrentPage,\"head-variant\":\"light\",\"fields\":_vm.fieldsSample,\"sort-by\":_vm.sortBy,\"sort-desc\":_vm.sortDesc,\"sort-icon-left\":\"\"},on:{\"update:sortBy\":function($event){_vm.sortBy=$event},\"update:sort-by\":function($event){_vm.sortBy=$event},\"update:sortDesc\":function($event){_vm.sortDesc=$event},\"update:sort-desc\":function($event){_vm.sortDesc=$event}}}),_vm._v(\" \"),_c('b-pagination',{attrs:{\"total-rows\":_vm.sampleTableRows,\"per-page\":_vm.samplePerPage,\"align\":\"right\",\"aria-controls\":\"sampleTable\"},model:{value:(_vm.sampleCurrentPage),callback:function ($$v) {_vm.sampleCurrentPage=$$v},expression:\"sampleCurrentPage\"}})],1),_vm._v(\" \"),_c('b-card',{staticClass:\"mb-2\",attrs:{\"title\":\"Predicted Age (Double-click on the table to see a bar chart of predicted ages)\",\"tag\":\"article\"}},[_c('b-table',{attrs:{\"responsive\":\"\",\"id\":\"ageTable\",\"items\":_vm.ageData,\"per-page\":_vm.agePerPage,\"current-page\":_vm.ageCurrentPage,\"head-variant\":\"light\",\"fields\":_vm.fields,\"sort-by\":_vm.sortBy,\"sort-desc\":_vm.sortDesc,\"sort-icon-left\":\"\"},on:{\"row-dblclicked\":_vm.drawBar,\"update:sortBy\":function($event){_vm.sortBy=$event},\"update:sort-by\":function($event){_vm.sortBy=$event},\"update:sortDesc\":function($event){_vm.sortDesc=$event},\"update:sort-desc\":function($event){_vm.sortDesc=$event}}}),_vm._v(\" \"),_c('b-pagination',{attrs:{\"total-rows\":_vm.ageTableRows,\"per-page\":_vm.agePerPage,\"align\":\"right\",\"aria-controls\":\"ageTable\"},model:{value:(_vm.ageCurrentPage),callback:function ($$v) {_vm.ageCurrentPage=$$v},expression:\"ageCurrentPage\"}})],1),_vm._v(\" \"),_c('b-card',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showBar),expression:\"showBar\"}],staticClass:\"mb-2\",attrs:{\"title\":\"Predicted Age\",\"tag\":\"article\"}},[_c('v-chart',{staticStyle:{\"height\":\"300px\"},attrs:{\"autoresize\":\"\",\"option\":_vm.predAgeOption}})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-53c8eb32\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/result/Table.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-53c8eb32\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Table.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Table.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Table.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-53c8eb32\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Table.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-53c8eb32\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/result/Table.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div style=\"width:100vw; max-width: 100%;\">\r\n    <b-row>\r\n      <b-col cols=\"3\">\r\n        <b-card header=\"Age Ratio Plot\" tag=\"article\" class=\"mb-2\">\r\n          <v-chart autoresize :option=\"optionAge\" style=\"height: 300px\"></v-chart>\r\n        </b-card>\r\n      </b-col>\r\n      <b-col cols=\"3\">\r\n        <b-card header=\"Gender Ratio Plot\" tag=\"article\" class=\"mb-2\">\r\n          <v-chart autoresize :option=\"optionGender\" style=\"height: 300px\"></v-chart>\r\n        </b-card>\r\n      </b-col>\r\n      <b-col v-show=showDisease cols=\"6\">\r\n        <b-card header=\"Disease Ratio Plot\" tag=\"article\" class=\"mb-2\">\r\n          <v-chart autoresize :option=\"optionDisease\" style=\"height: 300px\"></v-chart>\r\n        </b-card>\r\n      </b-col>\r\n      <b-col v-show=showTissue cols=\"6\">\r\n        <b-card header=\"Tissue Ratio Plot\" tag=\"article\" class=\"mb-2\">\r\n          <v-chart autoresize :option=\"optionTissue\" style=\"height: 300px\"></v-chart>\r\n        </b-card>\r\n      </b-col>\r\n      <b-col v-show=showRace cols=\"6\">\r\n        <b-card header=\"Race Ratio Plot\" tag=\"article\" class=\"mb-2\">\r\n          <v-chart autoresize :option=\"optionRace\" style=\"height: 300px\"></v-chart>\r\n        </b-card>\r\n      </b-col>\r\n    </b-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      optionAge: {},\r\n      optionGender: {\r\n        title: {\r\n          text: 'Diease Ratio',\r\n          left: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 'left'\r\n        },\r\n        series: [\r\n          {\r\n            type: 'pie',\r\n            radius: '50%',\r\n            data: [\r\n              { value: 58, name: 'Male' },\r\n              { value: 49, name: 'Female' },\r\n              { value: 49, name: 'Unknown' }\r\n            ],\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      optionDisease: {},\r\n      optionTissue: {\r\n        title: {\r\n          text: 'Diease Ratio',\r\n          left: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 'left'\r\n        },\r\n        series: [\r\n          {\r\n            type: 'pie',\r\n            radius: '50%',\r\n            data: [\r\n              { value: 25, name: 'T cell' },\r\n              { value: 12, name: 'PBMC' },\r\n              { value: 15, name: 'Colon' },\r\n              { value: 33, name: 'Whole blood' }\r\n            ],\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      optionRace: {\r\n        title: {\r\n          text: 'Diease Ratio',\r\n          left: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 'left'\r\n        },\r\n        series: [\r\n          {\r\n            type: 'pie',\r\n            radius: '50%',\r\n            data: [\r\n              { value: 13, name: 'Black' },\r\n              { value: 27, name: 'Japan' },\r\n              { value: 20, name: 'Unknown' }\r\n            ],\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      showDisease: false,\r\n      showTissue: false,\r\n      showRace: false\r\n    }\r\n  },\r\n  methods: {\r\n    drawChart () {\r\n      const genderNum = JSON.parse(sessionStorage['genderNum'])\r\n      const ageNum = JSON.parse(sessionStorage['ageNum'])\r\n      const diseaseNum = JSON.parse(sessionStorage['diseaseNum'])\r\n      const tissueNum = JSON.parse(sessionStorage['tissueNum'])\r\n      const raceNum = JSON.parse(sessionStorage['raceNum'])\r\n      let genderData = []\r\n      let diseaseData = []\r\n      let tissueData = []\r\n      let raceData = []\r\n      for (const item in genderNum) {\r\n        const num = {\r\n          value: genderNum[item], name: item\r\n        }\r\n        genderData.push(num)\r\n      }\r\n      console.log(genderData)\r\n      for (const item in diseaseNum) {\r\n        const num = {\r\n          value: diseaseNum[item], name: item\r\n        }\r\n        diseaseData.push(num)\r\n      }\r\n      for (const item in tissueNum) {\r\n        const num = {\r\n          value: tissueNum[item], name: item\r\n        }\r\n        tissueData.push(num)\r\n      }\r\n      for (const item in raceNum) {\r\n        const num = {\r\n          value: raceNum[item], name: item\r\n        }\r\n        raceData.push(num)\r\n      }\r\n      this.optionGender = {\r\n        title: {\r\n          // text: 'Gender Ratio',\r\n          left: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 'right',\r\n          right: 20,\r\n          top: 0,\r\n          bottom: 20\r\n        },\r\n        series: [\r\n          {\r\n            type: 'pie',\r\n            radius: '50%',\r\n            data: genderData,\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.optionAge = {\r\n        title: {\r\n          // text: 'Age Ratio',\r\n          left: 'center'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: ['< 0', '0-10', '10-20', '20-30', '30-40', '40-50', '50-60', '60-70', '70-80', '80-90', '90-100', '> 100'],\r\n          axisLabel: {\r\n            interval: 0,\r\n            rotate: 40\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            data: ageNum,\r\n            type: 'bar'\r\n          }\r\n        ]\r\n      }\r\n      this.optionDisease = {\r\n        title: {\r\n          // text: 'Diease Ratio',\r\n          left: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 'right',\r\n          right: 20,\r\n          top: 0,\r\n          bottom: 20,\r\n\r\n          type: 'scroll' // 数据过多时，分页显示\r\n        },\r\n        series: [\r\n          {\r\n            type: 'pie',\r\n            radius: '50%',\r\n            data: diseaseData,\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.optionTissue = {\r\n        title: {\r\n          // text: 'Diease Ratio',\r\n          left: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 'right',\r\n          right: 20,\r\n          top: 0,\r\n          bottom: 20,\r\n\r\n          type: 'scroll' // 数据过多时，分页显示\r\n        },\r\n        series: [\r\n          {\r\n            type: 'pie',\r\n            radius: '50%',\r\n            data: tissueData,\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.optionRace = {\r\n        title: {\r\n          // text: 'Diease Ratio',\r\n          left: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 'right',\r\n          right: 20,\r\n          top: 0,\r\n          bottom: 20,\r\n\r\n          type: 'scroll' // 数据过多时，分页显示\r\n        },\r\n        series: [\r\n          {\r\n            type: 'pie',\r\n            radius: '50%',\r\n            data: raceData,\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    changeModel () {\r\n      if (sessionStorage['model'] === 'datasets') {\r\n        this.showDisease = true\r\n        this.showTissue = true\r\n        this.showRace = true\r\n      }\r\n      // if (sessionStorage['model'] === 'disease') {\r\n      //   this.showTissue = false\r\n      //   this.showRace = false\r\n      //   this.showDisease = false\r\n      // } else if (sessionStorage['model'] === 'tissue') {\r\n      //   this.showTissue = false\r\n      //   this.showDisease = false\r\n      //   this.showRace = false\r\n      // } else if (sessionStorage['model'] === 'race') {\r\n      //   this.showRace = false\r\n      //   this.showTissue = false\r\n      //   this.showDisease = false\r\n      // }\r\n    }\r\n  },\r\n  mounted () {\r\n    this.drawChart()\r\n    this.changeModel()\r\n  }\r\n}\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/result/Plot.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"width\":\"100vw\",\"max-width\":\"100%\"}},[_c('b-row',[_c('b-col',{attrs:{\"cols\":\"3\"}},[_c('b-card',{staticClass:\"mb-2\",attrs:{\"header\":\"Age Ratio Plot\",\"tag\":\"article\"}},[_c('v-chart',{staticStyle:{\"height\":\"300px\"},attrs:{\"autoresize\":\"\",\"option\":_vm.optionAge}})],1)],1),_vm._v(\" \"),_c('b-col',{attrs:{\"cols\":\"3\"}},[_c('b-card',{staticClass:\"mb-2\",attrs:{\"header\":\"Gender Ratio Plot\",\"tag\":\"article\"}},[_c('v-chart',{staticStyle:{\"height\":\"300px\"},attrs:{\"autoresize\":\"\",\"option\":_vm.optionGender}})],1)],1),_vm._v(\" \"),_c('b-col',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showDisease),expression:\"showDisease\"}],attrs:{\"cols\":\"6\"}},[_c('b-card',{staticClass:\"mb-2\",attrs:{\"header\":\"Disease Ratio Plot\",\"tag\":\"article\"}},[_c('v-chart',{staticStyle:{\"height\":\"300px\"},attrs:{\"autoresize\":\"\",\"option\":_vm.optionDisease}})],1)],1),_vm._v(\" \"),_c('b-col',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showTissue),expression:\"showTissue\"}],attrs:{\"cols\":\"6\"}},[_c('b-card',{staticClass:\"mb-2\",attrs:{\"header\":\"Tissue Ratio Plot\",\"tag\":\"article\"}},[_c('v-chart',{staticStyle:{\"height\":\"300px\"},attrs:{\"autoresize\":\"\",\"option\":_vm.optionTissue}})],1)],1),_vm._v(\" \"),_c('b-col',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showRace),expression:\"showRace\"}],attrs:{\"cols\":\"6\"}},[_c('b-card',{staticClass:\"mb-2\",attrs:{\"header\":\"Race Ratio Plot\",\"tag\":\"article\"}},[_c('v-chart',{staticStyle:{\"height\":\"300px\"},attrs:{\"autoresize\":\"\",\"option\":_vm.optionRace}})],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-36a81ec2\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/result/Plot.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Plot.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Plot.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-36a81ec2\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Plot.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/result/Plot.vue\n// module id = null\n// module chunks = ","<template>\r\n    <div style=\"width:100vw; max-width: 100%;\">\r\n      <b-row>\r\n        <b-card-group class=\"col-md-4\" v-for=\"(clock, index) in clocks\" :key=\"index\">\r\n          <b-card :header=clock tag=\"article\" class=\"mb-2\">\r\n            <v-chart autoresize :option=\"chartData[index]\" style=\"height: 380px\"></v-chart>\r\n          </b-card>\r\n          </b-card-group>\r\n        </b-row>\r\n    </div>\r\n  </template>\r\n\r\n<script>\r\nimport * as ecStat from 'echarts-stat'\r\nimport * as echarts from 'echarts'\r\nexport default {\r\n  data () {\r\n    return {\r\n      clocks: [],\r\n      chartData: [],\r\n      matric: [3.51, 4.58, 0.98]\r\n    }\r\n  },\r\n  methods: {\r\n    draw () {\r\n      echarts.registerTransform(ecStat.transform.regression)\r\n      const predAge = JSON.parse(sessionStorage['predAgeData'])\r\n      for (let clock of this.clocks) {\r\n        let axisData = []\r\n        for (let i = 0; i < predAge.length; i++) {\r\n          const age = predAge[i].Age\r\n          const predage = predAge[i][clock]\r\n          const newArr = [age, predage]\r\n          axisData.push(newArr)\r\n        }\r\n        const option = {\r\n          dataset: [\r\n            {\r\n              source: axisData\r\n            },\r\n            {\r\n              transform: {\r\n                type: 'ecStat:regression'\r\n                // 'linear' by default.\r\n                // config: { method: 'linear', formulaOn: 'end'}\r\n              }\r\n            }\r\n          ],\r\n          // title: {\r\n          //   text: 'MAE=' + this.matric[0] + '  RMSE=' + this.matric[1] + '  R=' + this.matric[2],\r\n          //   left: 'center',\r\n          //   top: 10\r\n          // },\r\n          tooltip: {\r\n            // trigger: 'axis',\r\n            axisPointer: {\r\n              type: 'cross'\r\n            }\r\n          },\r\n          xAxis: {\r\n            name: 'Year',\r\n            splitLine: {\r\n              lineStyle: {\r\n                type: 'dashed'\r\n              }\r\n            }\r\n          },\r\n          yAxis: {\r\n            name: 'Year',\r\n            splitLine: {\r\n              lineStyle: {\r\n                type: 'dashed'\r\n              }\r\n            }\r\n          },\r\n          series: [\r\n            {\r\n              symbolSize: 5,\r\n              // data: axisData,\r\n              type: 'scatter',\r\n              datasetIndex: 0\r\n            },\r\n            {\r\n              name: 'line',\r\n              type: 'line',\r\n              datasetIndex: 1,\r\n              symbolSize: 0.1,\r\n              symbol: 'circle',\r\n              label: { show: true, fontSize: 16 },\r\n              labelLayout: { dx: -20 },\r\n              encode: { label: 2, tooltip: 1 }\r\n            }\r\n          ]\r\n        }\r\n        this.chartData.push(option)\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    this.clocks = sessionStorage['clocksName'].split(',')\r\n    this.draw()\r\n  }\r\n}\r\n\r\n</script>\r\n  <style scoped>\r\n  </style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/result/ScatterPlot.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"width\":\"100vw\",\"max-width\":\"100%\"}},[_c('b-row',_vm._l((_vm.clocks),function(clock,index){return _c('b-card-group',{key:index,staticClass:\"col-md-4\"},[_c('b-card',{staticClass:\"mb-2\",attrs:{\"header\":clock,\"tag\":\"article\"}},[_c('v-chart',{staticStyle:{\"height\":\"380px\"},attrs:{\"autoresize\":\"\",\"option\":_vm.chartData[index]}})],1)],1)}),1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-004f339d\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/result/ScatterPlot.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-004f339d\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ScatterPlot.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ScatterPlot.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ScatterPlot.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-004f339d\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ScatterPlot.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-004f339d\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/result/ScatterPlot.vue\n// module id = null\n// module chunks = ","<template>\n  <div style=\"width: 95%; margin: auto; margin-top: 50px;\">\n    <b-tabs\n    active-nav-item-class=\"font-weight-bold text-uppercase text-danger\"\n    active-tab-class=\"font-weight-bold text-success\"\n    content-class=\"mt-3\">\n    <b-tab title=\"Predicted Result Table\" active>\n        <Table/>\n    </b-tab>\n    <b-tab title=\"Predicted Result Plot\">\n      <Plot/>\n    </b-tab>\n    <b-tab title=\"Predicted Result Scatter Plot\">\n      <ScatterPlot/>\n    </b-tab>\n  </b-tabs>\n  </div>\n</template>\n\n<script>\nimport Table from './Table.vue'\nimport Plot from './Plot.vue'\nimport ScatterPlot from './ScatterPlot.vue'\n\nexport default {\n  data () {\n    return {\n      gender: ['male', 'male', 'female'],\n      selectGender: ['male', 'male', 'female'],\n      clocks: [],\n      datasetIDs: []\n    }\n  },\n\n  components: { Table, Plot, ScatterPlot },\n\n  methods: {\n    processData () {\n      console.log('result working')\n      if (this.$store.state.clockList.length !== 0) {\n        console.log('this.$store.state.clockList')\n        console.log(this.$store.state.clockList)\n        sessionStorage.setItem('clocksName', this.$store.state.clockList)\n        console.log('this.$store.state.model')\n        console.log(this.$store.state.model)\n        sessionStorage.setItem('model', this.$store.state.model)\n        console.log('JSON.stringify(this.$store.state.datasts)')\n        console.log(JSON.stringify(this.$store.state.datasts))\n        sessionStorage.setItem('data', JSON.stringify(this.$store.state.datasts))\n        const data = []\n        const predAge = []\n        let genderNum = {}\n        let ageNum = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        console.log('JSON.parse(sessionStorage[\\'data\\'])')\n        console.log(JSON.parse(sessionStorage['data']))\n        const datasets = JSON.parse(sessionStorage['data'])\n        let diseaseNum = {}\n        let tissueNum = {}\n        let raceNum = {}\n        for (const dataset of datasets) {\n          for (let index = 0; index < dataset['ID'].length; index++) {\n            // 年龄数据\n            const age = dataset['TrueAge'][index]\n            switch (true) {\n              case age < 0:\n                ageNum[0] += 1\n                break\n              case age >= 0 && age < 10:\n                ageNum[1] += 1\n                break\n              case age >= 10 && age < 20:\n                ageNum[2] += 1\n                break\n              case age >= 20 && age < 30:\n                ageNum[3] += 1\n                break\n              case age >= 30 && age < 40:\n                ageNum[4] += 1\n                break\n              case age >= 40 && age < 50:\n                ageNum[5] += 1\n                break\n              case age >= 50 && age < 60:\n                ageNum[6] += 1\n                break\n              case age >= 60 && age < 70:\n                ageNum[7] += 1\n                break\n              case age >= 70 && age < 80:\n                ageNum[8] += 1\n                break\n              case age >= 80 && age < 90:\n                ageNum[9] += 1\n                break\n              case age >= 90 && age < 100:\n                ageNum[10] += 1\n                break\n              case age >= 100:\n                ageNum[11] += 1\n                break\n            }\n            // 性别数据\n            if (dataset['Gender'] && genderNum[dataset['Gender'][index]]) {\n              genderNum[dataset['Gender'][index]] += 1\n            } else {\n              genderNum[dataset['Gender'][index]] = 1\n            }\n            // 疾病数据\n            if (dataset['Disease'] && diseaseNum[dataset['Disease'][index]]) {\n              diseaseNum[dataset['Disease'][index]] += 1\n            } else {\n              diseaseNum[dataset['Disease'][index]] = 1\n            }\n            // 组织数据\n            if (dataset['Tissue'] && tissueNum[dataset['Tissue'][index]]) {\n              tissueNum[dataset['Tissue'][index]] += 1\n            } else {\n              tissueNum[dataset['Tissue'][index]] = 1\n            }\n            // 人种数据\n            if (dataset['Race'] && raceNum[dataset['Race'][index]]) {\n              raceNum[dataset['Race'][index]] += 1\n            } else {\n              raceNum[dataset['Race'][index]] = 1\n            }\n            // 样本数据\n            const sample = {\n              'sampleID': dataset['ID'][index],\n              'Age': dataset['TrueAge'][index],\n              'Age_unit': dataset['Age_unit'],\n              'Gender': dataset['Gender'][index],\n              'Race': dataset['Race'][index],\n              'Tissue': dataset['Tissue'][index],\n              'Disease': dataset['Disease'][index],\n              'Condition': dataset['Condition'][index],\n              'Platform': dataset['Platform']\n            }\n            // 预测年龄\n            const pred = {\n              'dataset': dataset['Dataset'],\n              'sampleID': dataset['ID'][index],\n              'Age': dataset['TrueAge'][index]\n              // 'HorvathAge': dataset['PredAge']['HorvathAge'][index],\n              // 'Skin&BloodClock': dataset['PredAge']['Skin&BloodClock'][index],\n              // 'ZhangBlupredAge': dataset['PredAge']['ZhangBlupredAge'][index],\n              // 'HannumAge': dataset['PredAge']['HannumAge'][index],\n              // 'WeidnerAge': dataset['PredAge']['WeidnerAge'][index]\n              // 'LinAge': dataset['PredAge']['LinAge'][index],\n              // 'PedBE': dataset['PredAge']['PedBE'][index],\n              // 'FeSTwo': dataset['PredAge']['FeSTwo'][index],\n              // 'MEAT': dataset['PredAge']['MEAT'][index],\n              // 'AltumAge': dataset['PredAge']['AltumAge'][index],\n              // 'PhenoAge': dataset['PredAge']['PhenoAge'][index],\n              // 'BNN': dataset['PredAge']['BNN'][index],\n              // 'EPM': dataset['PredAge']['EPM'][index],\n              // 'CorticalClock': dataset['PredAge']['CorticalClock'][index],\n              // 'VidalBraloAge': dataset['PredAge']['VidalBraloAge'][index]\n              // 'PerSEClock': dataset['PredAge']['PerSEClock'][index]\n            }\n            if (dataset['PredAge']) {\n              const predAgeKeys = Object.keys(dataset['PredAge'])\n              for (const key of predAgeKeys) {\n                pred[key] = dataset['PredAge'][key][index]\n              }\n            }\n            data.push(sample)\n            predAge.push(pred)\n          }\n        }\n        console.log(datasets)\n        sessionStorage.setItem('sampleData', JSON.stringify(data))\n        sessionStorage.setItem('predAgeData', JSON.stringify(predAge))\n        sessionStorage.setItem('genderNum', JSON.stringify(genderNum))\n        sessionStorage.setItem('ageNum', JSON.stringify(ageNum))\n        sessionStorage.setItem('diseaseNum', JSON.stringify(diseaseNum))\n        sessionStorage.setItem('tissueNum', JSON.stringify(tissueNum))\n        sessionStorage.setItem('raceNum', JSON.stringify(raceNum))\n      }\n    },\n    allGender () {\n      this.selectGender = this.gender\n    },\n    Male () {\n      const select = []\n      for (const item of this.gender) {\n        if (item === 'male') {\n          select.push(item)\n        }\n      }\n      this.selectGender = select\n    },\n    Female () {\n      const select = []\n      for (const item of this.gender) {\n        if (item === 'female') {\n          select.push(item)\n        }\n      }\n      this.selectGender = select\n    }\n  },\n  created () {\n    this.processData()\n  }\n}\n\n</script>\n<style scoped>\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/result/Result.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"width\":\"95%\",\"margin\":\"auto\",\"margin-top\":\"50px\"}},[_c('b-tabs',{attrs:{\"active-nav-item-class\":\"font-weight-bold text-uppercase text-danger\",\"active-tab-class\":\"font-weight-bold text-success\",\"content-class\":\"mt-3\"}},[_c('b-tab',{attrs:{\"title\":\"Predicted Result Table\",\"active\":\"\"}},[_c('Table')],1),_vm._v(\" \"),_c('b-tab',{attrs:{\"title\":\"Predicted Result Plot\"}},[_c('Plot')],1),_vm._v(\" \"),_c('b-tab',{attrs:{\"title\":\"Predicted Result Scatter Plot\"}},[_c('ScatterPlot')],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-609565ef\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/result/Result.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-609565ef\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Result.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Result.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Result.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-609565ef\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Result.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-609565ef\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/result/Result.vue\n// module id = null\n// module chunks = ","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/get-iterator.js\n// module id = BO1k\n// module chunks = 2","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ecStat\"] = factory();\n\telse\n\t\troot[\"ecStat\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\t    return {\n\n\t        clustering: __webpack_require__(1),\n\t        regression: __webpack_require__(5),\n\t        statistics: __webpack_require__(6),\n\t        histogram: __webpack_require__(15),\n\n\t        transform: {\n\t            regression: __webpack_require__(18),\n\t            histogram: __webpack_require__(21),\n\t            clustering: __webpack_require__(22)\n\t        }\n\n\t    };\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\t    var dataProcess = __webpack_require__(2);\n\t    var dataPreprocess = dataProcess.dataPreprocess;\n\t    var normalizeDimensions = dataProcess.normalizeDimensions;\n\t    var arrayUtil = __webpack_require__(3);\n\t    var numberUtil = __webpack_require__(4);\n\t    var arraySize = arrayUtil.size;\n\t    var sumOfColumn = arrayUtil.sumOfColumn;\n\t    var arraySum = arrayUtil.sum;\n\t    var zeros = arrayUtil.zeros;\n\t    // var isArray = arrayUtil.isArray;\n\t    var numberUtil = __webpack_require__(4);\n\t    var isNumber = numberUtil.isNumber;\n\t    var mathPow = Math.pow;\n\n\t    var OutputType = {\n\t        /**\n\t         * Data are all in one. Cluster info are added as an attribute of data.\n\t         * ```ts\n\t         * type OutputDataSingle = {\n\t         *     // Each index of `data` is the index of the input data.\n\t         *     data: OutputDataItem[];\n\t         *     // The index of `centroids` is the cluster index.\n\t         *     centroids: [ValueOnX, ValueOnY][];\n\t         * };\n\t         * type InputDataItem = (ValueOnX | ValueOnY | OtherValue)[];\n\t         * type OutputDataItem = (...InputDataItem | ClusterIndex | SquareDistanceToCentroid)[];\n\t         * ```\n\t         */\n\t        SINGLE: 'single',\n\t        /**\n\t         * Data are separated by cluster. Suitable for retrieving data form each cluster.\n\t         * ```ts\n\t         * type OutputDataMultiple = {\n\t         *     // Each index of `clusterAssment` is the index of the input data.\n\t         *     clusterAssment: [ClusterIndex, SquareDistanceToCentroid][];\n\t         *     // The index of `centroids` is the cluster index.\n\t         *     centroids: [ValueOnX, ValueOnY][];\n\t         *     // The index of `pointsInCluster` is the cluster index.\n\t         *     pointsInCluster: DataItemListInOneCluster[];\n\t         * }\n\t         * type DataItemListInOneCluster = InputDataItem[];\n\t         * type InputDataItem = (ValueOnX | ValueOnY | OtherValue)[];\n\t         * type SquareDistanceToCentroid = number;\n\t         * type ClusterIndex = number;\n\t         * type ValueOnX = number;\n\t         * type ValueOnY = number;\n\t         * type OtherValue = unknown;\n\t         * ```\n\t         */\n\t        MULTIPLE: 'multiple'\n\t    }\n\n\t    /**\n\t     * KMeans of clustering algorithm.\n\t     * @param {Array.<Array.<number>>} data two-dimension array\n\t     * @param {number} k the number of clusters in a dataset\n\t     * @return {Object}\n\t     */\n\t    function kMeans(data, k, dataMeta) {\n\n\t        // create array to assign data points to centroids, also holds SE of each point\n\t        var clusterAssigned = zeros(data.length, 2);\n\t        var centroids = createRandCent(k, calcExtents(data, dataMeta.dimensions));\n\t        var clusterChanged = true;\n\t        var minDist;\n\t        var minIndex;\n\t        var distIJ;\n\t        var ptsInClust;\n\n\t        while (clusterChanged) {\n\t            clusterChanged = false;\n\t            for (var i = 0; i < data.length; i++) {\n\t                minDist = Infinity;\n\t                minIndex = -1;\n\t                for (var j = 0; j < k; j++) {\n\t                    distIJ = distEuclid(data[i], centroids[j], dataMeta);\n\t                    if (distIJ < minDist) {\n\t                        minDist = distIJ;\n\t                        minIndex = j;\n\t                    }\n\t                }\n\t                if (clusterAssigned[i][0] !== minIndex) {\n\t                    clusterChanged = true;\n\t                }\n\t                clusterAssigned[i][0] = minIndex;\n\t                clusterAssigned[i][1] = minDist;\n\t            }\n\t            //recalculate centroids\n\t            for (var i = 0; i < k; i++) {\n\t                ptsInClust = [];\n\t                for (var j = 0; j < clusterAssigned.length; j++) {\n\t                    if (clusterAssigned[j][0] === i) {\n\t                        ptsInClust.push(data[j]);\n\t                    }\n\t                }\n\t                centroids[i] = meanInColumns(ptsInClust, dataMeta);\n\t            }\n\t        }\n\n\t        var clusterWithKmeans = {\n\t            centroids: centroids,\n\t            clusterAssigned: clusterAssigned\n\t        };\n\t        return clusterWithKmeans;\n\t    }\n\n\t    /**\n\t     * Calculate the average of each column in a two-dimensional array\n\t     * and returns the values as an array.\n\t     */\n\t    function meanInColumns(dataList, dataMeta) {\n\t        var meanArray = [];\n\t        var sum;\n\t        var mean;\n\t        for (var j = 0; j < dataMeta.dimensions.length; j++) {\n\t            var dimIdx = dataMeta.dimensions[j];\n\t            sum = 0;\n\t            for (var i = 0; i < dataList.length; i++) {\n\t                sum += dataList[i][dimIdx];\n\t            }\n\t            mean = sum / dataList.length;\n\t            meanArray.push(mean);\n\t        }\n\t        return meanArray;\n\t    }\n\n\t    /**\n\t     * The combine of hierarchical clustering and k-means.\n\t     * @param {Array} data two-dimension array.\n\t     * @param {Object|number} [clusterCountOrConfig] config or clusterCountOrConfig.\n\t     * @param {number} clusterCountOrConfig.clusterCount Mandatory.\n\t     *        The number of clusters in a dataset. It has to be greater than 1.\n\t     * @param {boolean} [clusterCountOrConfig.stepByStep=false] Optional.\n\t     * @param {OutputType} [clusterCountOrConfig.outputType='multiple'] Optional.\n\t     *        See `OutputType`.\n\t     * @param {number} [clusterCountOrConfig.outputClusterIndexDimension] Mandatory.\n\t     *        Only work in `OutputType.SINGLE`.\n\t     * @param {number} [clusterCountOrConfig.outputCentroidDimensions] Optional.\n\t     *        If specified, the centroid will be set to those dimensions of the result data one by one.\n\t     *        By default not set centroid to result.\n\t     *        Only work in `OutputType.SINGLE`.\n\t     * @param {Array.<number>} [clusterCountOrConfig.dimensions] Optional.\n\t     *        Target dimensions to calculate the regression.\n\t     *        By default: use all of the data.\n\t     * @return {Array} See `OutputType`.\n\t     */\n\t    function hierarchicalKMeans(data, clusterCountOrConfig, stepByStep) {\n\t        var config = (\n\t            isNumber(clusterCountOrConfig)\n\t                ? {clusterCount: clusterCountOrConfig, stepByStep: stepByStep}\n\t                : clusterCountOrConfig\n\t        ) || {clusterCount: 2};\n\n\t        var k = config.clusterCount;\n\n\t        if (k < 2) {\n\t            return;\n\t        }\n\n\t        var dataMeta = parseDataMeta(data, config);\n\t        var isOutputTypeSingle = dataMeta.outputType === OutputType.SINGLE;\n\n\t        var dataSet = dataPreprocess(data, {dimensions: dataMeta.dimensions});\n\n\t        var clusterAssment = zeros(dataSet.length, 2);\n\t        var outputSingleData;\n\t        var setClusterIndex;\n\t        var getClusterIndex;\n\n\t        function setDistance(dataIndex, dist) {\n\t            clusterAssment[dataIndex][1] = dist;\n\t        }\n\t        function getDistance(dataIndex) {\n\t            return clusterAssment[dataIndex][1];\n\t        };\n\n\t        if (isOutputTypeSingle) {\n\t            outputSingleData = [];\n\t            var outputClusterIndexDimension = dataMeta.outputClusterIndexDimension;\n\n\t            setClusterIndex = function (dataIndex, clusterIndex) {\n\t                outputSingleData[dataIndex][outputClusterIndexDimension] = clusterIndex;\n\t            };\n\t            getClusterIndex = function (dataIndex) {\n\t                return outputSingleData[dataIndex][outputClusterIndexDimension];\n\t            };\n\n\t            for (var i = 0; i < dataSet.length; i++) {\n\t                outputSingleData.push(dataSet[i].slice());\n\t                setDistance(i, 0);\n\t                setClusterIndex(i, 0);\n\t            }\n\t        }\n\t        else {\n\t            setClusterIndex = function (dataIndex, clusterIndex) {\n\t                clusterAssment[dataIndex][0] = clusterIndex;\n\t            };\n\t            getClusterIndex = function (dataIndex) {\n\t                return clusterAssment[dataIndex][0];\n\t            };\n\t        }\n\n\t        // initial center point.\n\t        var centroid0 = meanInColumns(dataSet, dataMeta);\n\t        var centList = [centroid0];\n\t        for (var i = 0; i < dataSet.length; i++) {\n\t            var dist = distEuclid(dataSet[i], centroid0, dataMeta);\n\t            setDistance(i, dist);\n\t        }\n\n\t        var lowestSSE;\n\t        var ptsInClust;\n\t        var ptsNotClust;\n\t        var clusterInfo;\n\t        var sseSplit;\n\t        var sseNotSplit;\n\t        var index = 1;\n\t        var result = {\n\t            data: outputSingleData,\n\t            centroids: centList,\n\t            isEnd: false\n\t        };\n\t        if (!isOutputTypeSingle) {\n\t            // Only for backward compat.\n\t            result.clusterAssment = clusterAssment;\n\t        }\n\n\t        function oneStep() {\n\t            //the existing clusters are continuously divided\n\t            //until the number of clusters is k\n\t            if (index < k) {\n\t                lowestSSE = Infinity;\n\t                var centSplit;\n\t                var newCentroid;\n\t                var newClusterAss;\n\n\t                for (var j = 0; j < centList.length; j++) {\n\t                    ptsInClust = [];\n\t                    ptsNotClust = [];\n\t                    for (var i = 0; i < dataSet.length; i++) {\n\t                        if (getClusterIndex(i) === j) {\n\t                            ptsInClust.push(dataSet[i]);\n\t                        }\n\t                        else {\n\t                            ptsNotClust.push(getDistance(i));\n\t                        }\n\t                    }\n\t                    clusterInfo = kMeans(ptsInClust, 2, dataMeta);\n\t                    sseSplit = sumOfColumn(clusterInfo.clusterAssigned, 1);\n\t                    sseNotSplit = arraySum(ptsNotClust);\n\t                    if (sseSplit + sseNotSplit < lowestSSE) {\n\t                        lowestSSE = sseNotSplit + sseSplit;\n\t                        centSplit = j;\n\t                        newCentroid = clusterInfo.centroids;\n\t                        newClusterAss = clusterInfo.clusterAssigned;\n\t                    }\n\t                }\n\n\t                for (var i = 0; i < newClusterAss.length; i++) {\n\t                    if (newClusterAss[i][0] === 0) {\n\t                        newClusterAss[i][0] = centSplit;\n\t                    }\n\t                    else if (newClusterAss[i][0] === 1) {\n\t                        newClusterAss[i][0] = centList.length;\n\t                    }\n\t                }\n\n\t                centList[centSplit] = newCentroid[0];\n\t                centList.push(newCentroid[1]);\n\t                for (var i = 0, j = 0; i < dataSet.length && j < newClusterAss.length; i++) {\n\t                    if (getClusterIndex(i) === centSplit) {\n\t                        setClusterIndex(i, newClusterAss[j][0]);\n\t                        setDistance(i, newClusterAss[j++][1]);\n\t                    }\n\t                }\n\n\t                var pointInClust = [];\n\t                if (!isOutputTypeSingle) {\n\t                    for (var i = 0; i < centList.length; i++) {\n\t                        pointInClust[i] = [];\n\t                        for (var j = 0; j < dataSet.length; j++) {\n\t                            if (getClusterIndex(j) === i) {\n\t                                pointInClust[i].push(dataSet[j]);\n\t                            }\n\t                        }\n\t                    }\n\t                    result.pointsInCluster = pointInClust;\n\t                }\n\n\t                index++;\n\t            }\n\t            else {\n\t                result.isEnd = true;\n\t            }\n\t        }\n\n\t        if (!config.stepByStep) {\n\t            while (oneStep(), !result.isEnd);\n\t        }\n\t        else {\n\t            result.next = function () {\n\t                oneStep();\n\t                setCentroidToResultData(result, dataMeta);\n\t                return result;\n\t            };\n\t        }\n\t        setCentroidToResultData(result, dataMeta);\n\t        return result;\n\t    }\n\n\t    function setCentroidToResultData(result, dataMeta) {\n\t        var outputCentroidDimensions = dataMeta.outputCentroidDimensions;\n\t        if (dataMeta.outputType !== OutputType.SINGLE || outputCentroidDimensions == null) {\n\t            return;\n\t        }\n\t        var outputSingleData = result.data;\n\t        var centroids = result.centroids;\n\n\t        for (var i = 0; i < outputSingleData.length; i++) {\n\t            var line = outputSingleData[i];\n\t            var clusterIndex = line[dataMeta.outputClusterIndexDimension];\n\t            var centroid = centroids[clusterIndex];\n\t            var dimLen = Math.min(centroid.length, outputCentroidDimensions.length);\n\t            for (var j = 0; j < dimLen; j++) {\n\t                line[outputCentroidDimensions[j]] = centroid[j];\n\t            }\n\t        }\n\t    }\n\n\t    /**\n\t     * Create random centroid of kmeans.\n\t     */\n\t    function createRandCent(k, extents) {\n\t        //constructs a two-dimensional array with all values 0\n\t        var centroids = zeros(k, extents.length);\n\t        //create random cluster centers, within bounds of each dimension\n\t        for (var j = 0; j < extents.length; j++) {\n\t            var extentItem = extents[j];\n\t            for (var i = 0; i < k; i++) {\n\t                centroids[i][j] = extentItem.min + extentItem.span * Math.random();\n\t            }\n\t        }\n\t        return centroids;\n\t    }\n\n\t    /**\n\t     * Distance method for calculating similarity\n\t     */\n\t    function distEuclid(dataItem, centroid, dataMeta) {\n\t        // The distance should be normalized between different dimensions,\n\t        // otherwise they may provide different weight in the final distance.\n\t        // The greater weight offers more effect in the cluster determination.\n\n\t        var powerSum = 0;\n\t        var dimensions = dataMeta.dimensions;\n\t        var extents = dataMeta.rawExtents;\n\t        //subtract the corresponding elements in the vectors\n\t        for (var i = 0; i < dimensions.length; i++) {\n\t            var span = extents[i].span;\n\t            // If span is 0, do not count.\n\t            if (span) {\n\t                var dimIdx = dimensions[i];\n\t                var dist = (dataItem[dimIdx] - centroid[i]) / span;\n\t                powerSum += mathPow(dist, 2);\n\t            }\n\t        }\n\n\t        return powerSum;\n\t    }\n\n\t    function parseDataMeta(dataSet, config) {\n\t        var size = arraySize(dataSet);\n\t        if (size.length < 1) {\n\t            throw new Error('The input data of clustering should be two-dimension array.');\n\t        }\n\t        var colCount = size[1];\n\t        var defaultDimensions = [];\n\t        for (var i = 0; i < colCount; i++) {\n\t            defaultDimensions.push(i);\n\t        }\n\t        var dimensions = normalizeDimensions(config.dimensions, defaultDimensions);\n\t        var outputType = config.outputType || OutputType.MULTIPLE;\n\n\t        var outputClusterIndexDimension = config.outputClusterIndexDimension;\n\t        if (outputType === OutputType.SINGLE && !numberUtil.isNumber(outputClusterIndexDimension)) {\n\t            throw new Error('outputClusterIndexDimension is required as a number.');\n\t        }\n\t        var extents = calcExtents(dataSet, dimensions);\n\n\t        return {\n\t            dimensions: dimensions,\n\t            rawExtents: extents,\n\t            outputType: outputType,\n\t            outputClusterIndexDimension: outputClusterIndexDimension,\n\t            outputCentroidDimensions: config.outputCentroidDimensions,\n\t        };\n\t    }\n\n\t    function calcExtents(dataSet, dimensions) {\n\t        var extents = [];\n\t        var dimLen = dimensions.length;\n\t        for (var i = 0; i < dimLen; i++) {\n\t            extents.push({ min: Infinity, max: -Infinity });\n\t        }\n\t        for (var i = 0; i < dataSet.length; i++) {\n\t            var line = dataSet[i];\n\t            for (var j = 0; j < dimLen; j++) {\n\t                var extentItem = extents[j];\n\t                var val = line[dimensions[j]];\n\t                extentItem.min > val && (extentItem.min = val);\n\t                extentItem.max < val && (extentItem.max = val);\n\t            }\n\t        }\n\t        for (var i = 0; i < dimLen; i++) {\n\t            extents[i].span = extents[i].max - extents[i].min;\n\t        }\n\t        return extents;\n\t    }\n\n\t    return {\n\t        OutputType: OutputType,\n\t        hierarchicalKMeans: hierarchicalKMeans\n\t    };\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\t    var array = __webpack_require__(3);\n\t    var isArray = array.isArray;\n\t    var size = array.size;\n\t    var number = __webpack_require__(4);\n\t    var isNumber = number.isNumber;\n\n\t    /**\n\t     * @param  {Array.<number>|number} dimensions like `[2, 4]` or `4`\n\t     * @param  {Array.<number>} [defaultDimensions=undefined] By default `undefined`.\n\t     * @return {Array.<number>} number like `4` is normalized to `[4]`,\n\t     *         `null`/`undefined` is normalized to `defaultDimensions`.\n\t     */\n\t    function normalizeDimensions(dimensions, defaultDimensions) {\n\t        return typeof dimensions === 'number'\n\t            ? [dimensions]\n\t            : dimensions == null\n\t            ? defaultDimensions\n\t            : dimensions;\n\t    }\n\n\t    /**\n\t     * Data preprocessing, filter the wrong data object.\n\t     *  for example [12,] --- missing y value\n\t     *              [,12] --- missing x value\n\t     *              [12, b] --- incorrect y value\n\t     *              ['a', 12] --- incorrect x value\n\t     * @param  {Array.<Array>} data\n\t     * @param  {Object?} [opt]\n\t     * @param  {Array.<number>} [opt.dimensions] Optional. Like [2, 4],\n\t     *         means that dimension index 2 and dimension index 4 need to be number.\n\t     *         If null/undefined (by default), all dimensions need to be number.\n\t     * @param  {boolean} [opt.toOneDimensionArray] Convert to one dimension array.\n\t     *         Each value is from `opt.dimensions[0]` or dimension 0.\n\t     * @return {Array.<Array.<number>>}\n\t     */\n\t    function dataPreprocess(data, opt) {\n\t        opt = opt || {};\n\t        var dimensions = opt.dimensions;\n\t        var numberDimensionMap = {};\n\t        if (dimensions != null) {\n\t            for (var i = 0; i < dimensions.length; i++) {\n\t                numberDimensionMap[dimensions[i]] = true;\n\t            }\n\t        }\n\t        var targetOneDim = opt.toOneDimensionArray\n\t            ? (dimensions ? dimensions[0] : 0)\n\t            : null;\n\n\t        function shouldBeNumberDimension(dimIdx) {\n\t            return !dimensions || numberDimensionMap.hasOwnProperty(dimIdx);\n\t        }\n\n\t        if (!isArray(data)) {\n\t            throw new Error('Invalid data type, you should input an array');\n\t        }\n\t        var predata = [];\n\t        var arraySize = size(data);\n\n\t        if (arraySize.length === 1) {\n\t            for (var i = 0; i < arraySize[0]; i++) {\n\t                var item = data[i];\n\t                if (isNumber(item)) {\n\t                    predata.push(item);\n\t                }\n\t            }\n\t        }\n\t        else if (arraySize.length === 2) {\n\t            for (var i = 0; i < arraySize[0]; i++) {\n\t                var isCorrect = true;\n\t                var item = data[i];\n\t                for (var j = 0; j < arraySize[1]; j++) {\n\t                    if (shouldBeNumberDimension(j) && !isNumber(item[j])) {\n\t                        isCorrect = false;\n\t                    }\n\t                }\n\t                if (isCorrect) {\n\t                    predata.push(\n\t                        targetOneDim != null\n\t                            ? item[targetOneDim]\n\t                            : item\n\t                    );\n\t                }\n\t            }\n\t        }\n\t        return predata;\n\t    }\n\n\t    /**\n\t     * @param {string|number} val\n\t     * @return {number}\n\t     */\n\t    function getPrecision(val) {\n\t        var str = val.toString();\n\t        // scientific notation is not considered\n\t        var dotIndex = str.indexOf('.');\n\t        return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n\t    }\n\n\t    return {\n\t        normalizeDimensions: normalizeDimensions,\n\t        dataPreprocess: dataPreprocess,\n\t        getPrecision: getPrecision\n\t    };\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\t    var objToString = Object.prototype.toString;\n\t    var arrayProto = Array.prototype;\n\t    var nativeMap = arrayProto.map;\n\n\t    /**\n\t     * Get the size of a array\n\t     * @param  {Array} data\n\t     * @return {Array}\n\t     */\n\t    function size(data) {\n\t        var s = [];\n\t        while (isArray(data)) {\n\t            s.push(data.length);\n\t            data = data[0];\n\t        }\n\t        return s;\n\t    }\n\n\t    /**\n\t     * @param {*}  value\n\t     * @return {boolean}\n\t     */\n\t    function isArray(value) {\n\t        return objToString.call(value) === '[object Array]';\n\t    }\n\n\t    /**\n\t     * constructs a (m x n) array with all values 0\n\t     * @param  {number} m  the row\n\t     * @param  {number} n  the column\n\t     * @return {Array}\n\t     */\n\t    function zeros(m, n) {\n\t        var zeroArray = [];\n\t        for (var i = 0; i < m ; i++) {\n\t            zeroArray[i] = [];\n\t            for (var j = 0; j < n; j++) {\n\t                zeroArray[i][j] = 0;\n\t            }\n\t        }\n\t        return zeroArray;\n\t    }\n\n\t    /**\n\t     * Sums each element in the array.\n\t     * Internal use, for performance considerations, to avoid\n\t     * unnecessary judgments and calculations.\n\t     * @param  {Array} vector\n\t     * @return {number}\n\t     */\n\t    function sum(vector) {\n\t        var sum = 0;\n\t        for (var i = 0; i < vector.length; i++) {\n\t            sum += vector[i];\n\t        }\n\t        return sum;\n\t    }\n\n\t    /**\n\t     * Computes the sum of the specified column elements in a two-dimensional array\n\t     * @param  {Array.<Array>} dataList  two-dimensional array\n\t     * @param  {number} n  the specified column, zero-based\n\t     * @return {number}\n\t     */\n\t    function sumOfColumn(dataList, n) {\n\t        var sum = 0;\n\t        for (var i = 0; i < dataList.length; i++) {\n\t            sum += dataList[i][n];\n\t        }\n\t        return sum;\n\t    }\n\n\n\t    function ascending(a, b) {\n\n\t        return a > b ? 1 : a < b ? -1 : a === b ? 0 : NaN;\n\n\t    }\n\n\t    /**\n\t     * Binary search algorithm --- this bisector is specidfied to histogram, which every bin like that [a, b),\n\t     * so the return value use to add 1.\n\t     * @param  {Array.<number>} array\n\t     * @param  {number} value\n\t     * @param  {number} start\n\t     * @param  {number} end\n\t     * @return {number}\n\t     */\n\t    function bisect(array, value, start, end) { //移出去\n\n\t        if (start == null) {\n\t            start = 0;\n\t        }\n\t        if (end == null) {\n\t            end = array.length;\n\t        }\n\t        while (start < end) {\n\t            var mid = Math.floor((start + end) / 2);\n\t            var compare = ascending(array[mid], value);\n\t            if (compare > 0) {\n\t                end = mid;\n\t            }\n\t            else if (compare < 0) {\n\t                start = mid + 1;\n\t            }\n\t            else {\n\t                return mid + 1;\n\t            }\n\t        }\n\t        return start;\n\t    }\n\n\t    /**\n\t     * 数组映射\n\t     * @memberOf module:zrender/core/util\n\t     * @param {Array} obj\n\t     * @param {Function} cb\n\t     * @param {*} [context]\n\t     * @return {Array}\n\t     */\n\t    function map(obj, cb, context) {\n\t        if (!(obj && cb)) {\n\t            return;\n\t        }\n\t        if (obj.map && obj.map === nativeMap) {\n\t            return obj.map(cb, context);\n\t        }\n\t        else {\n\t            var result = [];\n\t            for (var i = 0, len = obj.length; i < len; i++) {\n\t                result.push(cb.call(context, obj[i], i, obj));\n\t            }\n\t            return result;\n\t        }\n\t    }\n\n\t    return {\n\t        size: size,\n\t        isArray: isArray,\n\t        zeros: zeros,\n\t        sum: sum,\n\t        sumOfColumn: sumOfColumn,\n\t        ascending: ascending,\n\t        bisect: bisect,\n\t        map: map\n\t    };\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\t    /**\n\t     * Test whether value is a number.\n\t     * @param  {*}  value\n\t     * @return {boolean}\n\t     */\n\t    function isNumber(value) {\n\n\t        value = value === null ? NaN : +value;\n\t        return typeof value === 'number' && !isNaN(value);\n\t    }\n\n\t    /**\n\t     * Test if a number is integer.\n\t     * @param  {number}  value\n\t     * @return {boolean}\n\t     */\n\t    function isInteger(value) {\n\t        return isFinite(value) && value === Math.round(value);\n\t    }\n\n\t    function quantityExponent(val) {\n\t        if (val === 0) {\n\t            return 0;\n\t        }\n\t        var exp = Math.floor(Math.log(val) / Math.LN10);\n\t        // Fix pricision loss.\n\t        if (val / Math.pow(10, exp) >= 10) {\n\t            exp++;\n\t        }\n\t        return exp;\n\t    }\n\n\t    return {\n\t        isNumber: isNumber,\n\t        isInteger: isInteger,\n\t        quantityExponent: quantityExponent\n\t    };\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\t    var dataProcess = __webpack_require__(2);\n\t    var dataPreprocess = dataProcess.dataPreprocess;\n\t    var normalizeDimensions = dataProcess.normalizeDimensions;\n\n\t    var regreMethods = {\n\n\t        /**\n\t         * Common linear regression algorithm\n\t         */\n\t        linear: function (predata, opt) {\n\n\t            var xDimIdx = opt.dimensions[0];\n\t            var yDimIdx = opt.dimensions[1];\n\t            var sumX = 0;\n\t            var sumY = 0;\n\t            var sumXY = 0;\n\t            var sumXX = 0;\n\t            var len = predata.length;\n\n\t            for (var i = 0; i < len; i++) {\n\t                var rawItem = predata[i];\n\t                sumX += rawItem[xDimIdx];\n\t                sumY += rawItem[yDimIdx];\n\t                sumXY += rawItem[xDimIdx] * rawItem[yDimIdx];\n\t                sumXX += rawItem[xDimIdx] * rawItem[xDimIdx];\n\t            }\n\n\t            var gradient = ((len * sumXY) - (sumX * sumY)) / ((len * sumXX) - (sumX * sumX));\n\t            var intercept = (sumY / len) - ((gradient * sumX) / len);\n\n\t            var result = [];\n\t            for (var j = 0; j < predata.length; j++) {\n\t                var rawItem = predata[j];\n\t                var resultItem = rawItem.slice();\n\t                resultItem[xDimIdx] = rawItem[xDimIdx];\n\t                resultItem[yDimIdx] = gradient * rawItem[xDimIdx] + intercept;\n\t                result.push(resultItem);\n\t            }\n\n\t            var expression = 'y = ' + Math.round(gradient * 100) / 100 + 'x + ' + Math.round(intercept * 100) / 100;\n\n\t            return {\n\t                points: result,\n\t                parameter: {\n\t                    gradient: gradient,\n\t                    intercept: intercept\n\t                },\n\t                expression: expression\n\t            };\n\t        },\n\n\t        /**\n\t         * If the raw data include [0,0] point, we should choose linearThroughOrigin\n\t         *   instead of linear.\n\t         */\n\t        linearThroughOrigin: function (predata, opt) {\n\n\t            var xDimIdx = opt.dimensions[0];\n\t            var yDimIdx = opt.dimensions[1];\n\t            var sumXX = 0;\n\t            var sumXY = 0;\n\n\t            for (var i = 0; i < predata.length; i++) {\n\t                var rawItem = predata[i];\n\t                sumXX += rawItem[xDimIdx] * rawItem[xDimIdx];\n\t                sumXY += rawItem[xDimIdx] * rawItem[yDimIdx];\n\t            }\n\n\t            var gradient = sumXY / sumXX;\n\t            var result = [];\n\n\t            for (var j = 0; j < predata.length; j++) {\n\t                var rawItem = predata[j];\n\t                var resultItem = rawItem.slice();\n\t                resultItem[xDimIdx] = rawItem[xDimIdx];\n\t                resultItem[yDimIdx] = rawItem[xDimIdx] * gradient;\n\t                result.push(resultItem);\n\t            }\n\n\t            var expression = 'y = ' + Math.round(gradient * 100) / 100 + 'x';\n\n\t            return {\n\t                points: result,\n\t                parameter: {\n\t                    gradient: gradient\n\t                },\n\t                expression: expression\n\t            };\n\t        },\n\n\t        /**\n\t         * Exponential regression\n\t         */\n\t        exponential: function (predata, opt) {\n\n\t            var xDimIdx = opt.dimensions[0];\n\t            var yDimIdx = opt.dimensions[1];\n\t            var sumX = 0;\n\t            var sumY = 0;\n\t            var sumXXY = 0;\n\t            var sumYlny = 0;\n\t            var sumXYlny = 0;\n\t            var sumXY = 0;\n\n\t            for (var i = 0; i < predata.length; i++) {\n\t                var rawItem = predata[i];\n\t                sumX += rawItem[xDimIdx];\n\t                sumY += rawItem[yDimIdx];\n\t                sumXY += rawItem[xDimIdx] * rawItem[yDimIdx];\n\t                sumXXY += rawItem[xDimIdx] * rawItem[xDimIdx] * rawItem[yDimIdx];\n\t                sumYlny += rawItem[yDimIdx] * Math.log(rawItem[yDimIdx]);\n\t                sumXYlny += rawItem[xDimIdx] * rawItem[yDimIdx] * Math.log(rawItem[yDimIdx]);\n\t            }\n\n\t            var denominator = (sumY * sumXXY) - (sumXY * sumXY);\n\t            var coefficient = Math.pow(Math.E, (sumXXY * sumYlny - sumXY * sumXYlny) / denominator);\n\t            var index = (sumY * sumXYlny - sumXY * sumYlny) / denominator;\n\t            var result = [];\n\n\t            for (var j = 0; j < predata.length; j++) {\n\t                var rawItem = predata[j];\n\t                var resultItem = rawItem.slice();\n\t                resultItem[xDimIdx] = rawItem[xDimIdx];\n\t                resultItem[yDimIdx] = coefficient * Math.pow(Math.E, index * rawItem[xDimIdx]);\n\t                result.push(resultItem);\n\t            }\n\n\t            var expression = 'y = ' + Math.round(coefficient * 100) / 100 + 'e^(' + Math.round(index * 100) / 100 + 'x)';\n\n\t            return {\n\t                points: result,\n\t                parameter: {\n\t                    coefficient: coefficient,\n\t                    index: index\n\t                },\n\t                expression: expression\n\t            };\n\n\t        },\n\n\t        /**\n\t         * Logarithmic regression\n\t         */\n\t        logarithmic: function (predata, opt) {\n\n\t            var xDimIdx = opt.dimensions[0];\n\t            var yDimIdx = opt.dimensions[1];\n\t            var sumlnx = 0;\n\t            var sumYlnx = 0;\n\t            var sumY = 0;\n\t            var sumlnxlnx = 0;\n\n\t            for (var i = 0; i < predata.length; i++) {\n\t                var rawItem = predata[i];\n\t                sumlnx += Math.log(rawItem[xDimIdx]);\n\t                sumYlnx += rawItem[yDimIdx] * Math.log(rawItem[xDimIdx]);\n\t                sumY += rawItem[yDimIdx];\n\t                sumlnxlnx += Math.pow(Math.log(rawItem[xDimIdx]), 2);\n\t            }\n\n\t            var gradient = (i * sumYlnx - sumY * sumlnx) / (i * sumlnxlnx - sumlnx * sumlnx);\n\t            var intercept = (sumY - gradient * sumlnx) / i;\n\t            var result = [];\n\n\t            for (var j = 0; j < predata.length; j++) {\n\t                var rawItem = predata[j];\n\t                var resultItem = rawItem.slice();\n\t                resultItem[xDimIdx] = rawItem[xDimIdx];\n\t                resultItem[yDimIdx] = gradient * Math.log(rawItem[xDimIdx]) + intercept;\n\t                result.push(resultItem);\n\t            }\n\n\t            var expression =\n\t                'y = '\n\t                + Math.round(intercept * 100) / 100\n\t                + ' + '\n\t                + Math.round(gradient * 100) / 100 + 'ln(x)';\n\n\t            return {\n\t                points: result,\n\t                parameter: {\n\t                    gradient: gradient,\n\t                    intercept: intercept\n\t                },\n\t                expression: expression\n\t            };\n\n\t        },\n\n\t        /**\n\t         * Polynomial regression\n\t         */\n\t        polynomial: function (predata, opt) {\n\n\t            var xDimIdx = opt.dimensions[0];\n\t            var yDimIdx = opt.dimensions[1];\n\t            var order = opt.order;\n\n\t            if (order == null) {\n\t                order = 2;\n\t            }\n\t            //coefficient matrix\n\t            var coeMatrix = [];\n\t            var lhs = [];\n\t            var k = order + 1;\n\n\t            for (var i = 0; i < k; i++) {\n\t                var sumA = 0;\n\t                for (var n = 0; n < predata.length; n++) {\n\t                    var rawItem = predata[n];\n\t                    sumA += rawItem[yDimIdx] * Math.pow(rawItem[xDimIdx], i);\n\t                }\n\t                lhs.push(sumA);\n\n\t                var temp = [];\n\t                for (var j = 0; j < k; j++) {\n\t                    var sumB = 0;\n\t                    for (var m = 0; m < predata.length; m++) {\n\t                        sumB += Math.pow(predata[m][xDimIdx], i + j);\n\t                    }\n\t                    temp.push(sumB);\n\t                }\n\t                coeMatrix.push(temp);\n\t            }\n\t            coeMatrix.push(lhs);\n\n\t            var coeArray = gaussianElimination(coeMatrix, k);\n\n\t            var result = [];\n\n\t            for (var i = 0; i < predata.length; i++) {\n\t                var value = 0;\n\t                var rawItem = predata[i];\n\t                for (var n = 0; n < coeArray.length; n++) {\n\t                    value += coeArray[n] * Math.pow(rawItem[xDimIdx], n);\n\t                }\n\t                var resultItem = rawItem.slice();\n\t                resultItem[xDimIdx] = rawItem[xDimIdx];\n\t                resultItem[yDimIdx] = value;\n\t                result.push(resultItem);\n\t            }\n\n\t            var expression = 'y = ';\n\t            for (var i = coeArray.length - 1; i >= 0; i--) {\n\t                if (i > 1) {\n\t                    expression += Math.round(coeArray[i] * Math.pow(10, i + 1)) / Math.pow(10, i + 1) + 'x^' + i + ' + ';\n\t                }\n\t                else if (i === 1) {\n\t                    expression += Math.round(coeArray[i] * 100) / 100 + 'x' + ' + ';\n\t                }\n\t                else {\n\t                    expression += Math.round(coeArray[i] * 100) / 100;\n\t                }\n\t            }\n\n\t            return {\n\t                points: result,\n\t                parameter: coeArray,\n\t                expression: expression\n\t            };\n\n\t        }\n\n\t    };\n\n\t    /**\n\t     * Gaussian elimination\n\t     * @param  {Array.<Array.<number>>} matrix   two-dimensional number array\n\t     * @param  {number} number\n\t     * @return {Array}\n\t     */\n\t    function gaussianElimination(matrix, number) {\n\n\t        for (var i = 0; i < matrix.length - 1; i++) {\n\t            var maxColumn = i;\n\t            for (var j = i + 1; j < matrix.length - 1; j++) {\n\t                if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][maxColumn])) {\n\t                    maxColumn = j;\n\t                }\n\t            }\n\t            // the matrix here is the transpose of the common Augmented matrix.\n\t            //  so the can perform the primary column transform, in fact, equivalent\n\t            //  to the primary line changes\n\t            for (var k = i; k < matrix.length; k++) {\n\t                var temp = matrix[k][i];\n\t                matrix[k][i] = matrix[k][maxColumn];\n\t                matrix[k][maxColumn] = temp;\n\t            }\n\t            for (var n = i + 1; n < matrix.length - 1; n++) {\n\t                for (var m = matrix.length - 1; m >= i; m--) {\n\t                    matrix[m][n] -= matrix[m][i] / matrix[i][i] * matrix[i][n];\n\t                }\n\t            }\n\t        }\n\n\t        var data = new Array(number);\n\t        var len = matrix.length - 1;\n\t        for (var j = matrix.length - 2; j >= 0; j--) {\n\t            var temp = 0;\n\t            for (var i = j + 1; i < matrix.length - 1; i++) {\n\t                temp += matrix[i][j] * data[i];\n\t            }\n\t            data[j] = (matrix[len][j] - temp) / matrix[j][j];\n\n\t        }\n\n\t        return data;\n\t    }\n\n\t    /**\n\t     * @param  {string} regreMethod\n\t     * @param  {Array.<Array.<number>>} data   two-dimensional number array\n\t     * @param  {Object|number} [optOrOrder]  opt or order\n\t     * @param  {number} [optOrOrder.order]  order of polynomials\n\t     * @param  {Array.<number>|number} [optOrOrder.dimensions=[0, 1]]  Target dimensions to calculate the regression.\n\t     *         By defualt: use [0, 1] as [x, y].\n\t     * @return {Array}\n\t     */\n\t    var regression = function (regreMethod, data, optOrOrder) {\n\t        var opt = typeof optOrOrder === 'number'\n\t            ? { order: optOrOrder }\n\t            : (optOrOrder || {});\n\n\t        var dimensions = normalizeDimensions(opt.dimensions, [0, 1]);\n\n\t        var predata = dataPreprocess(data, { dimensions: dimensions });\n\t        var result = regreMethods[regreMethod](predata, {\n\t            order: opt.order,\n\t            dimensions: dimensions\n\t        });\n\n\t        // Sort for line chart.\n\t        var xDimIdx = dimensions[0];\n\t        result.points.sort(function (itemA, itemB) {\n\t            return itemA[xDimIdx] - itemB[xDimIdx];\n\t        });\n\n\t        return result;\n\t    };\n\n\t    return regression;\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\t    var statistics = {};\n\n\t    statistics.max = __webpack_require__(7);\n\t    statistics.deviation = __webpack_require__(8);\n\t    statistics.mean = __webpack_require__(10);\n\t    statistics.median = __webpack_require__(12);\n\t    statistics.min = __webpack_require__(14);\n\t    statistics.quantile = __webpack_require__(13);\n\t    statistics.sampleVariance = __webpack_require__(9);\n\t    statistics.sum = __webpack_require__(11);\n\n\t    return statistics;\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\t    var number = __webpack_require__(4);\n\t    var isNumber = number.isNumber;\n\n\t    /**\n\t     * Is a method for computing the max value of a list of numbers,\n\t     * which will filter other data types.\n\t     * @param  {Array.<number>} data\n\t     * @return {number}\n\t     */\n\t    function max(data) {\n\n\t        var maxData = -Infinity;\n\t        for (var i = 0; i < data.length; i++) {\n\t            if (isNumber(data[i]) && data[i] > maxData) {\n\t                maxData = data[i];\n\t            }\n\t        }\n\t        return maxData;\n\t    }\n\n\t    return max;\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\t    var variance = __webpack_require__(9);\n\n\t    /**\n\t     * Computing the deviation\n\t     * @param  {Array.<number>} data\n\t     * @return {number}\n\t     */\n\t    return function (data) {\n\n\t        var squaredDeviation = variance(data);\n\n\t        return squaredDeviation ? Math.sqrt(squaredDeviation) : squaredDeviation;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\t    var number = __webpack_require__(4);\n\t    var isNumber = number.isNumber;\n\t    var mean = __webpack_require__(10);\n\n\t    /**\n\t     * Computing the variance of list of sample\n\t     * @param  {Array.<number>} data\n\t     * @return {number}\n\t     */\n\t    function sampleVariance(data) {\n\n\t        var len = data.length;\n\t        if (!len || len < 2) {\n\t            return 0;\n\t        }\n\t        if (data.length >= 2) {\n\n\t            var meanValue = mean(data);\n\t            var sum = 0;\n\t            var temple;\n\n\t            for (var i = 0; i < data.length; i++) {\n\t                if (isNumber(data[i])) {\n\t                    temple = data[i] - meanValue;\n\t                    sum += temple * temple;\n\t                }\n\t            }\n\t            return sum / (data.length - 1);\n\t        }\n\t    }\n\n\t    return sampleVariance;\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\t    var sum = __webpack_require__(11);\n\n\t    /**\n\t     * Is a method for computing the mean value of a list of numbers,\n\t     * which will filter other data types.\n\t     * @param  {Array.<number>} data\n\t     * @return {number}\n\t     */\n\t    function mean(data) {\n\n\t        var len = data.length;\n\n\t        if (!len) {\n\t            return 0;\n\t        }\n\n\t        return sum(data) / data.length;\n\n\t    }\n\n\t    return mean;\n\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\t    var number = __webpack_require__(4);\n\t    var isNumber = number.isNumber;\n\n\t    /**\n\t     * Is a method for computing the sum of a list of numbers,\n\t     * which will filter other data types.\n\t     * @param  {Array.<number>} data\n\t     * @return {number}\n\t     */\n\t    function sum(data) {\n\n\t        var len = data.length;\n\n\t        if (!len) {\n\t            return 0;\n\t        }\n\t        var sumData = 0;\n\t        for (var i = 0; i < len; i++) {\n\t            if (isNumber(data[i])) {\n\t                sumData += data[i];\n\t            }\n\t        }\n\t        return sumData;\n\t    }\n\n\t    return sum;\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\t    var quantile = __webpack_require__(13);\n\n\t    /**\n\t     * Is a method for computing the median value of a sorted array of numbers\n\t     * @param  {Array.<number>} data\n\t     * @return {number}\n\t     */\n\t    function median(data) {\n\n\t        return quantile(data, 0.5);\n\t    }\n\n\t    return median;\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\t    /**\n\t     * Estimating quantiles from a sorted sample of numbers\n\t     * @see https://en.wikipedia.org/wiki/Quantile#Estimating_quantiles_from_a_sample\n\t     * R-7 method\n\t     * @param  {Array.<number>} data  sorted array\n\t     * @param  {number} p\n\t     */\n\t    return function (data, p) {\n\n\t        var len = data.length;\n\n\t        if (!len) {\n\t            return 0;\n\t        }\n\t        if (p <= 0 || len < 2) {\n\t            return data[0];\n\t        }\n\t        if (p >= 1) {\n\t            return data[len -1];\n\t        }\n\t        // in the wikipedia's R-7 method h = (N - 1)p + 1, but here array index start from 0\n\t        var h = (len - 1) * p;\n\t        var i = Math.floor(h);\n\t        var a = data[i];\n\t        var b = data[i + 1];\n\t        return a + (b - a) * (h - i);\n\t    };\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\t    var number = __webpack_require__(4);\n\t    var isNumber = number.isNumber;\n\n\t    /**\n\t     * Is a method for computing the min value of a list of numbers,\n\t     * which will filter other data types.\n\t     * @param  {Array.<number>} data\n\t     * @return {number}\n\t     */\n\t    function min(data) {\n\n\t        var minData = Infinity;\n\t        for (var i = 0; i < data.length; i++) {\n\t            if (isNumber(data[i]) && data[i] < minData) {\n\t                minData = data[i];\n\t            }\n\t        }\n\t        return minData;\n\t    }\n\n\t    return min;\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\t    var max = __webpack_require__(7);\n\t    var min = __webpack_require__(14);\n\t    var quantile = __webpack_require__(13);\n\t    var deviation = __webpack_require__(8);\n\t    var dataProcess = __webpack_require__(2);\n\t    var dataPreprocess = dataProcess.dataPreprocess;\n\t    var normalizeDimensions = dataProcess.normalizeDimensions;\n\t    var array = __webpack_require__(3);\n\t    var ascending = array.ascending;\n\t    var map = array.map;\n\t    var range = __webpack_require__(16);\n\t    var bisect = array.bisect;\n\t    var tickStep = __webpack_require__(17);\n\n\t    /**\n\t     * Compute bins for histogram\n\t     * @param  {Array.<number>} data\n\t     * @param  {Object|string} optOrMethod Optional settings or `method`.\n\t     * @param  {Object|string} optOrMethod.method 'squareRoot' | 'scott' | 'freedmanDiaconis' | 'sturges'\n\t     * @param  {Array.<number>|number} optOrMethod.dimensions If data is a 2-d array,\n\t     *         which dimension will be used to calculate histogram.\n\t     * @return {Object}\n\t     */\n\t    function computeBins(data, optOrMethod) {\n\t        var opt = typeof optOrMethod === 'string'\n\t            ? { method: optOrMethod }\n\t            : (optOrMethod || {});\n\n\t        var threshold = opt.method == null\n\t            ? thresholdMethod.squareRoot\n\t            : thresholdMethod[opt.method];\n\t        var dimensions = normalizeDimensions(opt.dimensions);\n\n\t        var values = dataPreprocess(data, {\n\t            dimensions: dimensions,\n\t            toOneDimensionArray: true\n\t        });\n\t        var maxValue = max(values);\n\t        var minValue = min(values);\n\t        var binsNumber = threshold(values, minValue, maxValue);\n\t        var tickStepResult = tickStep(minValue, maxValue, binsNumber);\n\t        var step = tickStepResult.step;\n\t        var toFixedPrecision = tickStepResult.toFixedPrecision;\n\n\t        // return the xAxis coordinate for each bins, except the end point of the value\n\t        var rangeArray = range(\n\t            // use function toFixed() to avoid data like '0.700000001'\n\t            +((Math.ceil(minValue / step) * step).toFixed(toFixedPrecision)),\n\t            +((Math.floor(maxValue / step) * step).toFixed(toFixedPrecision)),\n\t            step,\n\t            toFixedPrecision\n\t        );\n\n\t        var len = rangeArray.length;\n\n\t        var bins = new Array(len + 1);\n\n\t        for (var i = 0; i <= len; i++) {\n\t            bins[i] = {};\n\t            bins[i].sample = [];\n\t            bins[i].x0 = i > 0\n\t                ? rangeArray[i - 1]\n\t                : (rangeArray[i] - minValue) === step\n\t                ? minValue\n\t                : (rangeArray[i] - step);\n\t            bins[i].x1 = i < len\n\t                ? rangeArray[i]\n\t                : (maxValue - rangeArray[i-1]) === step\n\t                ? maxValue\n\t                : rangeArray[i - 1] + step;\n\t        }\n\n\t        for (var i = 0; i < values.length; i++) {\n\t            if (minValue <= values[i] && values[i] <= maxValue) {\n\t                bins[bisect(rangeArray, values[i], 0, len)].sample.push(values[i]);\n\t            }\n\t        }\n\n\t        var data = map(bins, function (bin) {\n\t            // use function toFixed() to avoid data like '6.5666638489'\n\t            return [\n\t                +((bin.x0 + bin.x1) / 2).toFixed(toFixedPrecision),\n\t                bin.sample.length,\n\t                bin.x0,\n\t                bin.x1,\n\t                bin.x0 + ' - ' + bin.x1\n\t            ];\n\t        });\n\n\t        var customData = map(bins, function (bin) {\n\t            return [bin.x0, bin.x1, bin.sample.length];\n\t        });\n\n\t        return {\n\t            bins: bins,\n\t            data: data,\n\t            customData: customData\n\t        };\n\t    }\n\n\t    /**\n\t     * Four kinds of threshold methods used to\n\t     * compute how much bins the histogram should be divided\n\t     * @see  https://en.wikipedia.org/wiki/Histogram\n\t     * @type {Object}\n\t     */\n\t    var thresholdMethod = {\n\n\t        squareRoot: function (data) {\n\n\t            var bins = Math.ceil(Math.sqrt(data.length));\n\n\t            return bins > 50 ? 50 : bins;\n\t        },\n\n\t        scott: function (data, min, max) {\n\n\t            return Math.ceil((max - min) / (3.5 * deviation(data) * Math.pow(data.length, -1 / 3)));\n\t        },\n\n\t        freedmanDiaconis: function (data, min, max) {\n\n\t            data.sort(ascending);\n\n\t            return Math.ceil(\n\t                (max - min) / (2 * (quantile(data, 0.75) - quantile(data, 0.25)) * Math.pow(data.length, -1 / 3))\n\t            );\n\t        },\n\n\t        sturges: function (data) {\n\n\t            return Math.ceil(Math.log(data.length) / Math.LN2) + 1;\n\n\t        }\n\t    };\n\n\t    return computeBins;\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\t    var dataProcess = __webpack_require__(2);\n\t    var getPrecision = dataProcess.getPrecision;\n\n\t    /**\n\t     * Computing range array.\n\t     * Adding param precision to fix range value, avoiding range[i] = 0.7000000001.\n\t     * @param  {number} start\n\t     * @param  {number} end\n\t     * @param  {number} step\n\t     * @param  {number} precision\n\t     * @return {Array.<number>}\n\t     */\n\t    return function (start, end, step, precision) {\n\n\t        var len = arguments.length;\n\n\t        if (len < 2) {\n\t            end = start;\n\t            start = 0;\n\t            step = 1;\n\t        }\n\t        else if (len < 3) {\n\t            step = 1;\n\t        }\n\t        else if (len < 4) {\n\t            step = +step;\n\t            precision = getPrecision(step);\n\t        }\n\t        else {\n\t            precision = +precision;\n\t        }\n\n\t        var n = Math.ceil(((end - start) / step).toFixed(precision));\n\t        var range = new Array(n + 1);\n\t        for (var i = 0; i < n + 1; i++) {\n\t            range[i] = +(start + i * step).toFixed(precision);\n\t        }\n\t        return range;\n\t    };\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\t    var numberUtil = __webpack_require__(4);\n\n\t    /**\n\t     * Computing the length of step\n\t     * @see  https://github.com/d3/d3-array/blob/master/src/ticks.js\n\t     * @param {number} start\n\t     * @param {number} stop\n\t     * @param {number} count\n\t     */\n\t    return function (start, stop, count) {\n\n\t        var step0 = Math.abs(stop - start) / count;\n\t        var precision = numberUtil.quantityExponent(step0);\n\n\t        var step1 = Math.pow(10, precision);\n\t        var error = step0 / step1;\n\n\t        if (error >= Math.sqrt(50)) {\n\t            step1 *= 10;\n\t        }\n\t        else if (error >= Math.sqrt(10)) {\n\t            step1 *= 5;\n\t        }\n\t        else if(error >= Math.sqrt(2)) {\n\t            step1 *= 2;\n\t        }\n\n\t        var toFixedPrecision = precision < 0 ? -precision : 0;\n\t        var resultStep = +(\n\t            (stop >= start ? step1 : -step1).toFixed(toFixedPrecision)\n\t        );\n\n\t        return {\n\t            step: resultStep,\n\t            toFixedPrecision: toFixedPrecision\n\t        };\n\t    };\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\t    var regression = __webpack_require__(5);\n\t    var transformHelper = __webpack_require__(19);\n\t    var FORMULA_DIMENSION = 2;\n\n\t    return {\n\n\t        type: 'ecStat:regression',\n\n\t        /**\n\t         * @param {Paramter<typeof regression>[0]} [params.config.method='linear'] 'linear' by default\n\t         * @param {Paramter<typeof regression>[2]} [params.config.order=2] Only work when method is `polynomial`.\n\t         * @param {DimensionLoose[]|DimensionLoose} [params.config.dimensions=[0, 1]] dimensions that used to calculate regression.\n\t         *        By default [0, 1].\n\t         * @param {'start' | 'end' | 'all'} params.config.formulaOn Include formula on the last (third) dimension of the:\n\t         *        'start': first data item.\n\t         *        'end': last data item (by default).\n\t         *        'all': all data items.\n\t         *        'none': no data item.\n\t         */\n\t        transform: function transform(params) {\n\t            var upstream = params.upstream;\n\t            var config = params.config || {};\n\t            var method = config.method || 'linear';\n\n\t            var result = regression(method, upstream.cloneRawData(), {\n\t                order: config.order,\n\t                dimensions: transformHelper.normalizeExistingDimensions(params, config.dimensions)\n\t            });\n\t            var points = result.points;\n\n\t            var formulaOn = config.formulaOn;\n\t            if (formulaOn == null) {\n\t                formulaOn = 'end';\n\t            }\n\n\t            var dimensions;\n\t            if (formulaOn !== 'none') {\n\t                for (var i = 0; i < points.length; i++) {\n\t                    points[i][FORMULA_DIMENSION] =\n\t                    (\n\t                        (formulaOn === 'start' && i === 0)\n\t                        || (formulaOn === 'all')\n\t                        || (formulaOn === 'end' && i === points.length - 1)\n\t                    ) ? result.expression : '';\n\t                }\n\t                dimensions = upstream.cloneAllDimensionInfo();\n\t                dimensions[FORMULA_DIMENSION] = {};\n\t            }\n\n\t            return [{\n\t                dimensions: dimensions,\n\t                data: points\n\t            }];\n\t        }\n\t    };\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\t    var arrayUtil = __webpack_require__(3);\n\t    var numberUtil = __webpack_require__(4);\n\t    var objectUtil = __webpack_require__(20);\n\n\t    /**\n\t     * type DimensionLoose = DimensionIndex | DimensionName;\n\t     * type DimensionIndex = number;\n\t     * type DimensionName = string;\n\t     *\n\t     * @param {object} transformParams The parameter of echarts transfrom.\n\t     * @param {DimensionLoose | DimensionLoose[]} dimensionsConfig\n\t     * @return {DimensionIndex | DimensionIndex[]}\n\t     */\n\t    function normalizeExistingDimensions(transformParams, dimensionsConfig) {\n\t        if (dimensionsConfig == null) {\n\t            return;\n\t        }\n\t        var upstream = transformParams.upstream;\n\n\t        if (arrayUtil.isArray(dimensionsConfig)) {\n\t            var result = [];\n\t            for (var i = 0; i < dimensionsConfig.length; i++) {\n\t                var dimInfo = upstream.getDimensionInfo(dimensionsConfig[i]);\n\t                validateDimensionExists(dimInfo, dimensionsConfig[i]);\n\t                result[i] = dimInfo.index;\n\t            }\n\t            return result;\n\t        }\n\t        else {\n\t            var dimInfo = upstream.getDimensionInfo(dimensionsConfig);\n\t            validateDimensionExists(dimInfo, dimensionsConfig);\n\t            return dimInfo.index;\n\t        }\n\n\t        function validateDimensionExists(dimInfo, dimConfig) {\n\t            if (!dimInfo) {\n\t                throw new Error('Can not find dimension by ' + dimConfig);\n\t            }\n\t        }\n\t    }\n\n\t    /**\n\t     * @param {object} transformParams The parameter of echarts transfrom.\n\t     * @param {(DimensionIndex | {name: DimensionName, index: DimensionIndex})[]} dimensionsConfig\n\t     * @param {{name: DimensionName | DimensionName[], index: DimensionIndex | DimensionIndex[]}}\n\t     */\n\t    function normalizeNewDimensions(dimensionsConfig) {\n\t        if (arrayUtil.isArray(dimensionsConfig)) {\n\t            var names = [];\n\t            var indices = [];\n\t            for (var i = 0; i < dimensionsConfig.length; i++) {\n\t                var item = parseDimensionNewItem(dimensionsConfig[i]);\n\t                names.push(item.name);\n\t                indices.push(item.index);\n\t            }\n\t            return {name: names, index: indices};\n\t        }\n\t        else if (dimensionsConfig != null) {\n\t            return parseDimensionNewItem(dimensionsConfig);\n\t        }\n\n\t        function parseDimensionNewItem(dimConfig) {\n\t            if (numberUtil.isNumber(dimConfig)) {\n\t                return { index: dimConfig };\n\t            }\n\t            else if (objectUtil.isObject(dimConfig) && numberUtil.isNumber(dimConfig.index)) {\n\t                return dimConfig;\n\t            }\n\t            throw new Error('Illegle new dimensions config. Expect `{ name: string, index: number }`.');\n\t        }\n\t    }\n\n\t    return {\n\t        normalizeExistingDimensions: normalizeExistingDimensions,\n\t        normalizeNewDimensions: normalizeNewDimensions\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\t    function extend(target, source) {\n\t        if (Object.assign) {\n\t            Object.assign(target, source);\n\t        }\n\t        else {\n\t            for (var key in source) {\n\t                if (source.hasOwnProperty(key)) {\n\t                    target[key] = source[key];\n\t                }\n\t            }\n\t        }\n\t        return target;\n\t    }\n\n\t    function isObject(value) {\n\t        const type = typeof value;\n\t        return type === 'function' || (!!value && type === 'object');\n\t    }\n\n\t    return {\n\t        extend: extend,\n\t        isObject: isObject\n\t    };\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\t    var histogram = __webpack_require__(15);\n\t    var transformHelper = __webpack_require__(19);\n\n\t    return {\n\n\t        type: 'ecStat:histogram',\n\n\t        /**\n\t         * @param {'squareRoot' | 'scott' | 'freedmanDiaconis' | 'sturges'} [params.config.method='squareRoot']\n\t         * @param {DimnensionLoose[]} [params.config.dimensions=[0, 1]] dimensions that used to calculate histogram.\n\t         *        By default [0].\n\t         */\n\t        transform: function transform(params) {\n\t            var upstream = params.upstream;\n\t            var config = params.config || {};\n\n\t            var result = histogram(upstream.cloneRawData(), {\n\t                method: config.method,\n\t                dimensions: transformHelper.normalizeExistingDimensions(params, config.dimensions)\n\t            });\n\n\t            return [{\n\t                dimensions: ['MeanOfV0V1', 'VCount', 'V0', 'V1', 'DisplayableName'],\n\t                data: result.data\n\t            }, {\n\t                data: result.customData\n\t            }];\n\t        }\n\t    };\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n\t    var clustering = __webpack_require__(1);\n\t    var numberUtil = __webpack_require__(4);\n\t    var transformHelper = __webpack_require__(19);\n\n\t    var isNumber = numberUtil.isNumber;\n\n\t    return {\n\n\t        type: 'ecStat:clustering',\n\n\t        /**\n\t         * @param {number} params.config.clusterCount Mandatory.\n\t         *        The number of clusters in a dataset. It has to be greater than 1.\n\t         * @param {(DimensionName | DimensionIndex)[]} [params.config.dimensions] Optional.\n\t         *        Target dimensions to calculate the regression.\n\t         *        By default: use all of the data.\n\t         * @param {(DimensionIndex | {name?: DimensionName, index: DimensionIndex})} [params.config.outputClusterIndexDimension] Mandatory.\n\t         * @param {(DimensionIndex | {name?: DimensionName, index: DimensionIndex})[]} [params.config.outputCentroidDimensions] Optional.\n\t         *        If specified, the centroid will be set to those dimensions of the result data one by one.\n\t         *        By default not set centroid to result.\n\t         */\n\t        transform: function transform(params) {\n\t            var upstream = params.upstream;\n\t            var config = params.config || {};\n\t            var clusterCount = config.clusterCount;\n\n\t            if (!isNumber(clusterCount) || clusterCount <= 0) {\n\t                throw new Error('config param \"clusterCount\" need to be specified as an interger greater than 1.');\n\t            }\n\n\t            if (clusterCount === 1) {\n\t                return [{\n\t                }, {\n\t                    data: []\n\t                }];\n\t            }\n\n\t            var outputClusterIndexDimension = transformHelper.normalizeNewDimensions(\n\t                config.outputClusterIndexDimension\n\t            );\n\t            var outputCentroidDimensions = transformHelper.normalizeNewDimensions(\n\t                config.outputCentroidDimensions\n\t            );\n\n\t            if (outputClusterIndexDimension == null) {\n\t                throw new Error('outputClusterIndexDimension is required as a number.');\n\t            }\n\n\t            var result = clustering.hierarchicalKMeans(upstream.cloneRawData(), {\n\t                clusterCount: clusterCount,\n\t                stepByStep: false,\n\t                dimensions: transformHelper.normalizeExistingDimensions(params, config.dimensions),\n\t                outputType: clustering.OutputType.SINGLE,\n\t                outputClusterIndexDimension: outputClusterIndexDimension.index,\n\t                outputCentroidDimensions: (outputCentroidDimensions || {}).index\n\t            });\n\n\t            var sourceDimAll = upstream.cloneAllDimensionInfo();\n\t            var resultDimsDef = [];\n\t            for (var i = 0; i < sourceDimAll.length; i++) {\n\t                var sourceDimItem = sourceDimAll[i];\n\t                resultDimsDef.push(sourceDimItem.name);\n\t            }\n\n\t            // Always set to dims def even if name not exists, because the resultDimsDef.length\n\t            // need to be enlarged to tell echarts that there is \"cluster index dimension\" and \"dist dimension\".\n\t            resultDimsDef[outputClusterIndexDimension.index] = outputClusterIndexDimension.name;\n\n\t            if (outputCentroidDimensions) {\n\t                for (var i = 0; i < outputCentroidDimensions.index.length; i++) {\n\t                    if (outputCentroidDimensions.name[i] != null) {\n\t                        resultDimsDef[outputCentroidDimensions.index[i]] = outputCentroidDimensions.name[i];\n\t                    }\n\t                }\n\t            }\n\n\t            return [{\n\t                dimensions: resultDimsDef,\n\t                data: result.data\n\t            }, {\n\t                data: result.centroids\n\t            }];\n\t        }\n\t    };\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ })\n/******/ ])\n});\n;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts-stat/dist/ecStat.js\n// module id = GY9q\n// module chunks = 2","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_classof.js\n// module id = RY/4\n// module chunks = 1 2","require('../../modules/es7.object.values');\nmodule.exports = require('../../modules/_core').Object.values;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/values.js\n// module id = TmV0\n// module chunks = 2","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.object.values.js\n// module id = fZOM\n// module chunks = 2","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/get-iterator.js\n// module id = fxRn\n// module chunks = 2","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/core.get-iterator.js\n// module id = g8Ux\n// module chunks = 2","module.exports = { \"default\": require(\"core-js/library/fn/object/values\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/values.js\n// module id = gRE1\n// module chunks = 2","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-to-array.js\n// module id = mbce\n// module chunks = 2","module.exports = require('./dist/ecStat.js');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts-stat/index.js\n// module id = siuG\n// module chunks = 2"],"sourceRoot":""}